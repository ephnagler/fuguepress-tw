/*! tailwindcss v4.0.6 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --spacing: 0.25rem;
    --breakpoint-sm: 40rem;
    --breakpoint-md: 48rem;
    --breakpoint-lg: 64rem;
    --breakpoint-xl: 80rem;
    --breakpoint-2xl: 96rem;
    --container-3xs: 16rem;
    --container-2xs: 18rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --text-9xl: 8rem;
    --text-9xl--line-height: 1;
    --font-weight-thin: 100;
    --font-weight-extralight: 200;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --font-weight-black: 900;
    --tracking-tighter: -0.05em;
    --tracking-tight: -0.025em;
    --tracking-normal: 0em;
    --tracking-wide: 0.025em;
    --tracking-wider: 0.05em;
    --tracking-widest: 0.1em;
    --leading-tight: 1.25;
    --leading-snug: 1.375;
    --leading-normal: 1.5;
    --leading-relaxed: 1.625;
    --leading-loose: 2;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --radius-4xl: 2rem;
    --shadow-2xs: 0 1px rgb(0 0 0 / 0.05);
    --shadow-xs: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-sm: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);
    --inset-shadow-2xs: inset 0 1px rgb(0 0 0 / 0.05);
    --inset-shadow-xs: inset 0 1px 1px rgb(0 0 0 / 0.05);
    --inset-shadow-sm: inset 0 2px 4px rgb(0 0 0 / 0.05);
    --drop-shadow-xs: 0 1px 1px rgb(0 0 0 / 0.05);
    --drop-shadow-sm: 0 1px 2px rgb(0 0 0 / 0.15);
    --drop-shadow-md: 0 3px 3px rgb(0 0 0 / 0.12);
    --drop-shadow-lg: 0 4px 4px rgb(0 0 0 / 0.15);
    --drop-shadow-xl: 0 9px 7px rgb(0 0 0 / 0.1);
    --drop-shadow-2xl: 0 25px 25px rgb(0 0 0 / 0.15);
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-xs: 4px;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-lg: 16px;
    --blur-xl: 24px;
    --blur-2xl: 40px;
    --blur-3xl: 64px;
    --perspective-dramatic: 100px;
    --perspective-near: 300px;
    --perspective-normal: 500px;
    --perspective-midrange: 800px;
    --perspective-distant: 1200px;
    --aspect-video: 16 / 9;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var( --default-font-variation-settings, normal );
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );
    font-feature-settings: var( --default-mono-font-feature-settings, normal );
    font-variation-settings: var( --default-mono-font-variation-settings, normal );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .menu {
    display: flex;
    width: fit-content;
    flex-direction: column;
    flex-wrap: wrap;
    padding: calc(0.25rem * 2);
    --menu-active-fg: var(--color-neutral-content);
    --menu-active-bg: var(--color-neutral);
    font-size: 0.875rem;
    :where(li ul) {
      position: relative;
      margin-inline-start: calc(0.25rem * 4);
      padding-inline-start: calc(0.25rem * 2);
      white-space: nowrap;
      &:before {
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        top: calc(0.25rem * 3);
        bottom: calc(0.25rem * 3);
        background-color: var(--color-base-content);
        opacity: 10%;
        width: var(--border);
        content: "";
      }
    }
    :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
      display: none;
    }
    :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
      display: grid;
      grid-auto-flow: column;
      align-content: flex-start;
      align-items: center;
      gap: calc(0.25rem * 2);
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 1.5);
      text-align: start;
      transition-property: color, background-color, box-shadow;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      grid-auto-columns: minmax(auto, max-content) auto max-content;
      text-wrap: balance;
      user-select: none;
    }
    :where(li > details > summary) {
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      &::-webkit-details-marker {
        display: none;
      }
    }
    :where(li > details > summary), :where(li > .menu-dropdown-toggle) {
      &:after {
        justify-self: flex-end;
        display: block;
        height: 0.375rem;
        width: 0.375rem;
        rotate: -135deg;
        translate: 0 -1px;
        transition-property: rotate, translate;
        transition-duration: 0.2s;
        content: "";
        transform-origin: 50% 50%;
        box-shadow: 2px 2px inset;
        pointer-events: none;
      }
    }
    :where(li > details[open] > summary):after, :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
      rotate: 45deg;
      translate: 0 1px;
    }
    :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn) {
      &.menu-focus, &:focus-visible {
        cursor: pointer;
        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        color: var(--color-base-content);
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
      cursor: pointer;
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
    }
    :where(li:empty) {
      background-color: var(--color-base-content);
      opacity: 10%;
      margin: 0.5rem 1rem;
      height: 1px;
    }
    :where(li) {
      position: relative;
      display: flex;
      flex-shrink: 0;
      flex-direction: column;
      flex-wrap: wrap;
      align-items: stretch;
      .badge {
        justify-self: flex-end;
      }
      & > *:not(ul, .menu-title, details, .btn):active, & > *:not(ul, .menu-title, details, .btn).menu-active, & > details > summary:active {
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
        color: var(--menu-active-fg);
        background-color: var(--menu-active-bg);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
        &:not(&:active) {
          box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
        }
      }
      &.menu-disabled {
        pointer-events: none;
        color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
      }
    }
  }
  .modal {
    pointer-events: none;
    visibility: hidden;
    position: fixed;
    inset: calc(0.25rem * 0);
    margin: calc(0.25rem * 0);
    display: grid;
    height: 100%;
    max-height: none;
    width: 100%;
    max-width: none;
    align-items: center;
    justify-items: center;
    background-color: transparent;
    padding: calc(0.25rem * 0);
    color: inherit;
    overflow-x: hidden;
    transition: transform 0.3s ease-out, visibility 0s allow-discrete, opacity 0.1s ease-out;
    overflow-y: hidden;
    overscroll-behavior: contain;
    z-index: 999;
    &:not(dialog:not(.modal-open)), &::backdrop {
      opacity: 100%;
      @starting-style {
        visibility: hidden;
      }
      @starting-style {
        opacity: 0%;
      }
      background-color: oklch(0% 0 0/ 0.4);
      transition: display 0.3s ease-out allow-discrete, opacity 0.3s ease-out, visibility 0.3s ease-out allow-discrete;
    }
    &.modal-open, &[open], &:target {
      pointer-events: auto;
      visibility: visible;
      opacity: 100%;
      @starting-style {
        visibility: hidden;
      }
      @starting-style {
        opacity: 0%;
      }
      .modal-box {
        translate: 0 0;
        scale: 1;
        opacity: 1;
      }
    }
  }
  .tab {
    position: relative;
    display: inline-flex;
    cursor: pointer;
    appearance: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    text-align: center;
    webkit-user-select: none;
    user-select: none;
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
      }
    }
    --tab-p: 1rem;
    --tab-bg: var(--color-base-100);
    --tab-border-color: var(--color-base-300);
    --tab-radius-ss: 0;
    --tab-radius-se: 0;
    --tab-radius-es: 0;
    --tab-radius-ee: 0;
    --tab-order: 0;
    --tab-radius-min: calc(0.75rem - var(--border));
    border-color: #0000;
    order: var(--tab-order);
    height: calc(var(--size-field, 0.25rem) * 10);
    font-size: 0.875rem;
    padding-inline-start: var(--tab-p);
    padding-inline-end: var(--tab-p);
    &:is(input[type="radio"]) {
      min-width: fit-content;
      &:after {
        content: attr(aria-label);
      }
    }
    &:checked, &:is(.tab-active, [aria-selected="true"]) {
      & + .tab-content {
        display: block;
        height: 100%;
      }
    }
    &:not(:checked, :hover, .tab-active, [aria-selected="true"]) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
    &:not(input):empty {
      flex-grow: 1;
      cursor: default;
    }
    &:focus {
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible {
      outline: 2px solid currentColor;
      outline-offset: -5px;
    }
    &[disabled] {
      pointer-events: none;
      opacity: 40%;
    }
  }
  .dropdown {
    position: relative;
    display: inline-block;
    position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
    & > *:not(summary):focus {
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    .dropdown-content {
      position: absolute;
    }
    &:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) {
      .dropdown-content {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
    }
    &[popover], .dropdown-content {
      @starting-style {
        scale: 95%;
      }
      @starting-style {
        opacity: 0;
      }
      z-index: 999;
      animation: dropdown 0.2s;
      transition-property: opacity, scale, display;
      transition-behavior: allow-discrete;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }
    &.dropdown-open, &:not(.dropdown-hover):focus, &:focus-within {
      > [tabindex]:first-child {
        pointer-events: none;
      }
      .dropdown-content {
        opacity: 100%;
      }
    }
    &.dropdown-hover:hover {
      .dropdown-content {
        opacity: 100%;
        scale: 100%;
      }
    }
    &:is(details) {
      summary {
        &::-webkit-details-marker {
          display: none;
        }
      }
    }
    &.dropdown-open, &:focus, &:focus-within {
      .dropdown-content {
        scale: 100%;
      }
    }
    &:where([popover]) {
      background: #0000;
    }
    &[popover] {
      position: fixed;
      color: inherit;
      @supports not (position-area: bottom) {
        margin: auto;
        &.dropdown-open:not(:popover-open) {
          display: none;
          transform-origin: top;
          opacity: 0%;
          scale: 95%;
        }
        &::backdrop {
          background-color: color-mix(in oklab, #000 30%, #0000);
        }
      }
      &:not(.dropdown-open, :popover-open) {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
    }
  }
  .loading {
    pointer-events: none;
    display: inline-block;
    aspect-ratio: 1 / 1;
    width: calc(0.25rem * 6);
    background-color: currentColor;
    vertical-align: middle;
    mask-size: 100%;
    mask-repeat: no-repeat;
    mask-position: center;
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
  }
  .visible {
    visibility: visible;
  }
  .select {
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    appearance: none;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    background-color: var(--color-base-100);
    padding-inline-start: calc(0.25rem * 4);
    padding-inline-end: calc(0.25rem * 7);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: 0.875rem;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);
    background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
    background-size: 4px 4px, 4px 4px;
    background-repeat: no-repeat;
    text-overflow: ellipsis;
    box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    border-color: var(--input-color);
    --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    --size: calc(var(--size-field, 0.25rem) * 10);
    [dir="rtl"] & {
      background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%);
    }
    select {
      margin-inline-start: calc(0.25rem * -4);
      margin-inline-end: calc(0.25rem * -7);
      height: 100%;
      width: calc(100% + 2.75rem);
      appearance: none;
      padding-inline-start: calc(0.25rem * 4);
      padding-inline-end: calc(0.25rem * 7);
      background: inherit;
      border-radius: inherit;
      border-style: none;
      &:focus, &:focus-within {
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    &:focus, &:focus-within {
      --input-color: var(--color-base-content);
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
      outline: 2px solid var(--input-color);
      outline-offset: 2px;
    }
    &:has(> select[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      &::placeholder {
        color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
      }
    }
    &:has(> select[disabled]) > select[disabled] {
      cursor: not-allowed;
    }
  }
  .toggle {
    border: var(--border) solid currentColor;
    color: var(--input-color);
    position: relative;
    display: inline-grid;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    place-content: center;
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    grid-template-columns: 0fr 1fr 1fr;
    border-radius: calc( var(--radius-selector) + min( var(--toggle-p), calc(var(--radius-selector) + var(--radius-selector) + var(--radius-selector)) ) + min( var(--border), calc(var(--radius-selector) + var(--radius-selector) + var(--radius-selector)) ) );
    padding: var(--toggle-p);
    box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;
    transition: color 0.3s, grid-template-columns 0.2s;
    --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);
    --toggle-p: 0.1875rem;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: calc((var(--size) * 2) - (var(--border) + var(--toggle-p)) * 2);
    height: var(--size);
    > * {
      z-index: 1;
      grid-column: span 1 / span 1;
      grid-column-start: 2;
      grid-row-start: 1;
      height: 100%;
      cursor: pointer;
      appearance: none;
      background-color: transparent;
      padding: calc(0.25rem * 0.5);
      transition: opacity 0.2s, rotate 0.4s;
      border: none;
      &:focus {
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      &:nth-child(2) {
        color: var(--color-base-100);
        rotate: 0deg;
      }
      &:nth-child(3) {
        color: var(--color-base-100);
        opacity: 0%;
        rotate: -15deg;
      }
    }
    &:has(:checked) {
      > :nth-child(2) {
        opacity: 0%;
        rotate: 15deg;
      }
      > :nth-child(3) {
        opacity: 100%;
        rotate: 0deg;
      }
    }
    &:before {
      position: relative;
      inset-inline-start: calc(0.25rem * 0);
      grid-column-start: 2;
      grid-row-start: 1;
      aspect-ratio: 1 / 1;
      height: 100%;
      border-radius: var(--radius-selector);
      background-color: currentColor;
      @media print {
        outline: .25rem solid;
      }
      @media print {
        outline-offset: -1rem;
      }
      translate: 0;
      --tw-content: "";
      content: var(--tw-content);
      transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s;
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
      @media (forced-colors: active) {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
        outline-offset: calc(1px * -1);
      }
    }
    &:focus-visible, &:has(:focus-visible) {
      outline: 2px solid currentColor;
      outline-offset: 2px;
    }
    &:checked, &[aria-checked="true"], &:has(> input:checked) {
      grid-template-columns: 1fr 1fr 0fr;
      background-color: var(--color-base-100);
      --input-color: var(--color-base-content);
      &:before {
        background-color: currentColor;
        @starting-style {
          opacity: 0;
        }
      }
    }
    &:indeterminate {
      grid-template-columns: 0.5fr 1fr 0.5fr;
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 30%;
      &:before {
        background-color: transparent;
        border: var(--border) solid currentColor;
      }
    }
  }
  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--radius-box);
    outline-width: 2px;
    transition: outline 0.2s ease-in-out;
    outline: 0 solid #0000;
    outline-offset: 2px;
    &:focus {
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible {
      outline-color: currentColor;
    }
    :where(figure:first-child) {
      overflow: hidden;
      border-start-start-radius: inherit;
      border-start-end-radius: inherit;
      border-end-start-radius: unset;
      border-end-end-radius: unset;
    }
    :where(figure:last-child) {
      overflow: hidden;
      border-start-start-radius: unset;
      border-start-end-radius: unset;
      border-end-start-radius: inherit;
      border-end-end-radius: inherit;
    }
    &:where(.card-border) {
      border: var(--border) solid var(--color-base-200);
    }
    &:where(.card-dash) {
      border: var(--border) dashed var(--color-base-200);
    }
    &.image-full {
      display: grid;
      &:before {
        position: relative;
        grid-column-start: 1;
        grid-row-start: 1;
        border-radius: var(--radius-box);
        background-color: var(--color-neutral);
        opacity: 75%;
        content: "";
      }
      > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
      > .card-body {
        position: relative;
        color: var(--color-neutral-content);
      }
      :where(figure) {
        overflow: hidden;
        border-radius: inherit;
      }
      > figure img {
        height: 100%;
        object-fit: cover;
      }
    }
    figure {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    &:has(> input:is(input[type="checkbox"], input[type="radio"])) {
      cursor: pointer;
      user-select: none;
    }
    &:has(> :checked) {
      outline: 2px solid currentColor;
    }
  }
  .checkbox {
    border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
    position: relative;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: var(--radius-selector);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    color: var(--color-base-content);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
    transition: background-color 0.2s, box-shadow 0.2s;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    &:before {
      --tw-content: "";
      content: var(--tw-content);
      display: block;
      width: 100%;
      height: 100%;
      rotate: 45deg;
      background-color: currentColor;
      opacity: 0%;
      transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
      transition-delay: 0.1s;
      clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
      box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      font-size: 1rem;
      line-height: 0.75;
    }
    &:focus-visible {
      outline: 2px solid var(--input-color, currentColor);
      outline-offset: 2px;
    }
    &:checked, &[aria-checked="true"] {
      background-color: var(--input-color, #0000);
      box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
      &:before {
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
        opacity: 100%;
        @media print {
          rotate: 0deg;
        }
        @media print {
          background-color: transparent;
        }
        @media print {
          --tw-content: "✔︎";
        }
        @media print {
          clip-path: none;
        }
        @media (forced-colors: active) {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
    }
    &:indeterminate {
      &:before {
        rotate: 0deg;
        opacity: 100%;
        translate: 0 -35%;
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 20%;
    }
  }
  .steps {
    display: inline-grid;
    grid-auto-flow: column;
    overflow: hidden;
    overflow-x: auto;
    counter-reset: step;
    grid-auto-columns: 1fr;
    .step {
      display: grid;
      grid-template-columns: repeat(1, minmax(0, 1fr));
      grid-template-columns: auto;
      grid-template-rows: repeat(2, minmax(0, 1fr));
      grid-template-rows: 40px 1fr;
      place-items: center;
      text-align: center;
      min-width: 4rem;
      --step-bg: var(--color-base-300);
      --step-fg: var(--color-base-content);
      &:before {
        top: calc(0.25rem * 0);
        grid-column-start: 1;
        grid-row-start: 1;
        height: calc(0.25rem * 2);
        width: 100%;
        border: 1px solid;
        color: var(--step-bg);
        background-color: var(--step-bg);
        --tw-content: "";
        content: var(--tw-content);
        margin-inline-start: -100%;
      }
      > .step-icon, &:not(:has(.step-icon)):after {
        content: counter(step);
        counter-increment: step;
        z-index: 1;
        color: var(--step-fg);
        background-color: var(--step-bg);
        border: 1px solid var(--step-bg);
        position: relative;
        grid-column-start: 1;
        grid-row-start: 1;
        display: grid;
        height: calc(0.25rem * 8);
        width: calc(0.25rem * 8);
        place-items: center;
        place-self: center;
        border-radius: calc(infinity * 1px);
      }
      &:first-child:before {
        content: none;
      }
      &[data-content]:after {
        content: attr(data-content);
      }
    }
    .step-neutral {
      + .step-neutral:before, &:after, > .step-icon {
        --step-bg: var(--color-neutral);
        --step-fg: var(--color-neutral-content);
      }
    }
    .step-primary {
      + .step-primary:before, &:after, > .step-icon {
        --step-bg: var(--color-primary);
        --step-fg: var(--color-primary-content);
      }
    }
    .step-secondary {
      + .step-secondary:before, &:after, > .step-icon {
        --step-bg: var(--color-secondary);
        --step-fg: var(--color-secondary-content);
      }
    }
    .step-accent {
      + .step-accent:before, &:after, > .step-icon {
        --step-bg: var(--color-accent);
        --step-fg: var(--color-accent-content);
      }
    }
    .step-info {
      + .step-info:before, &:after, > .step-icon {
        --step-bg: var(--color-info);
        --step-fg: var(--color-info-content);
      }
    }
    .step-success {
      + .step-success:before, &:after, > .step-icon {
        --step-bg: var(--color-success);
        --step-fg: var(--color-success-content);
      }
    }
    .step-warning {
      + .step-warning:before, &:after, > .step-icon {
        --step-bg: var(--color-warning);
        --step-fg: var(--color-warning-content);
      }
    }
    .step-error {
      + .step-error:before, &:after, > .step-icon {
        --step-bg: var(--color-error);
        --step-fg: var(--color-error-content);
      }
    }
  }
  .radio {
    position: relative;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    border: var(--border) solid var(--input-color, color-mix(in srgb, currentColor 20%, #0000));
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    color: var(--input-color, currentColor);
    &:before {
      display: block;
      width: 100%;
      height: 100%;
      border-radius: calc(infinity * 1px);
      --tw-content: "";
      content: var(--tw-content);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
    }
    &:focus-visible {
      outline: 2px solid currentColor;
    }
    &:checked, &[aria-checked="true"] {
      animation: radio 0.2s ease-out;
      border-color: currentColor;
      background-color: var(--color-base-100);
      &:before {
        background-color: currentColor;
        @media print {
          outline: .25rem solid;
        }
        @media print {
          outline-offset: -1rem;
        }
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
        @media (forced-colors: active) {
          outline-style: var(--tw-outline-style);
          outline-width: 1px;
          outline-offset: calc(1px * -1);
        }
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 20%;
    }
  }
  .range {
    appearance: none;
    webkit-appearance: none;
    --range-thumb: var(--color-base-100);
    --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
    --range-progress: currentColor;
    --range-fill: 1;
    --range-p: 0.25rem;
    --range-bg: color-mix(in oklab, currentColor 10%, #0000);
    cursor: pointer;
    overflow: hidden;
    background-color: transparent;
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
    border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
    border: none;
    height: var(--range-thumb-size);
    [dir="rtl"] & {
      --range-dir: -1;
    }
    &:focus {
      outline: none;
    }
    &:focus-visible {
      outline: 2px solid;
      outline-offset: 2px;
    }
    &::-webkit-slider-runnable-track {
      width: 100%;
      background-color: var(--range-bg);
      border-radius: var(--radius-selector);
      height: calc(var(--range-thumb-size) * 0.5);
      @media (forced-colors: active) {
        border: 1px solid;
      }
    }
    &::-webkit-slider-thumb {
      position: relative;
      box-sizing: border-box;
      border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
      background-color: currentColor;
      height: var(--range-thumb-size);
      width: var(--range-thumb-size);
      border: var(--range-p) solid;
      appearance: none;
      webkit-appearance: none;
      top: 50%;
      color: var(--range-progress);
      transform: translateY(-50%);
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
    }
    &::-moz-range-track {
      width: 100%;
      background-color: var(--range-bg);
      border-radius: var(--radius-selector);
      height: calc(var(--range-thumb-size) * 0.5);
      @media (forced-colors: active) {
        border: 1px solid;
      }
    }
    &::-moz-range-thumb {
      position: relative;
      box-sizing: border-box;
      border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
      background-color: currentColor;
      height: var(--range-thumb-size);
      width: var(--range-thumb-size);
      border: var(--range-p) solid;
      top: 50%;
      color: var(--range-progress);
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 30%;
    }
  }
  .table {
    font-size: 0.875rem;
    position: relative;
    width: 100%;
    border-radius: var(--radius-box);
    text-align: left;
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      text-align: right;
    }
    tr.row-hover {
      &, &:nth-child(even) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-base-200);
          }
        }
      }
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 3);
      vertical-align: middle;
    }
    :where(thead, tfoot) {
      white-space: nowrap;
      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      font-size: 0.875rem;
      font-weight: 600;
    }
    :where(tfoot) {
      border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
    }
    :where(.table-pin-rows thead tr) {
      position: sticky;
      top: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.table-pin-rows tfoot tr) {
      position: sticky;
      bottom: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.table-pin-cols tr th) {
      position: sticky;
      right: calc(0.25rem * 0);
      left: calc(0.25rem * 0);
      background-color: var(--color-base-100);
    }
    :where(thead tr, tbody tr:not(:last-child)) {
      border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
    }
  }
  .list {
    display: flex;
    flex-direction: column;
    font-size: 0.875rem;
    :where(.list-row) {
      --list-grid-cols: minmax(0, auto) 1fr;
      position: relative;
      display: grid;
      grid-auto-flow: column;
      gap: calc(0.25rem * 4);
      border-radius: var(--radius-box);
      padding: calc(0.25rem * 4);
      word-break: break-word;
      grid-template-columns: var(--list-grid-cols);
      &:has(.list-col-grow:nth-child(1)) {
        --list-grid-cols: 1fr;
      }
      &:has(.list-col-grow:nth-child(2)) {
        --list-grid-cols: minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(3)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(4)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(5)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(6)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
        minmax(0, auto) 1fr;
      }
      :not(.list-col-wrap) {
        grid-row-start: 1;
      }
    }
    & > :not(:last-child) {
      &.list-row, .list-row {
        &:after {
          content: "";
          border-bottom: var(--border) solid;
          inset-inline: var(--radius-box);
          position: absolute;
          bottom: calc(0.25rem * 0);
          border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
        }
      }
    }
  }
  .rating {
    position: relative;
    display: inline-flex;
    vertical-align: middle;
    & input {
      border: none;
      appearance: none;
    }
    :where(*) {
      animation: rating 0.25s ease-out;
      height: calc(0.25rem * 6);
      width: calc(0.25rem * 6);
      border-radius: 0;
      background-color: var(--color-base-content);
      opacity: 20%;
      &:is(input) {
        cursor: pointer;
      }
    }
    & .rating-hidden {
      width: calc(0.25rem * 2);
      background-color: transparent;
    }
    input[type="radio"]:checked {
      background-image: none;
    }
    * {
      &:checked, &[aria-checked="true"], &[aria-current="true"], &:has(~ *:checked, ~ *[aria-checked="true"], ~ *[aria-current="true"]) {
        opacity: 100%;
      }
      &:focus-visible {
        transition: scale 0.2s ease-out;
        scale: 1.1;
      }
    }
    & *:active:focus {
      animation: none;
      scale: 1.1;
    }
    &.rating-xs :where(*:not(.rating-hidden)) {
      width: calc(0.25rem * 4);
      height: calc(0.25rem * 4);
    }
    &.rating-sm :where(*:not(.rating-hidden)) {
      width: calc(0.25rem * 5);
      height: calc(0.25rem * 5);
    }
    &.rating-md :where(*:not(.rating-hidden)) {
      width: calc(0.25rem * 6);
      height: calc(0.25rem * 6);
    }
    &.rating-lg :where(*:not(.rating-hidden)) {
      width: calc(0.25rem * 7);
      height: calc(0.25rem * 7);
    }
    &.rating-xl :where(*:not(.rating-hidden)) {
      width: calc(0.25rem * 8);
      height: calc(0.25rem * 8);
    }
  }
  .swap {
    position: relative;
    display: inline-grid;
    cursor: pointer;
    place-content: center;
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    input {
      appearance: none;
      border: none;
    }
    > * {
      grid-column-start: 1;
      grid-row-start: 1;
      transition-property: transform, rotate, opacity;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
    .swap-on, .swap-indeterminate, input:indeterminate ~ .swap-on {
      opacity: 0%;
    }
    input:is(:checked, :indeterminate) {
      & ~ .swap-off {
        opacity: 0%;
      }
    }
    input:checked ~ .swap-on, input:indeterminate ~ .swap-indeterminate {
      opacity: 100%;
    }
  }
  .avatar {
    position: relative;
    display: inline-flex;
    vertical-align: middle;
    & > div {
      display: block;
      aspect-ratio: 1 / 1;
      overflow: hidden;
    }
    img {
      height: 100%;
      width: 100%;
      object-fit: cover;
    }
  }
  .drawer {
    position: relative;
    display: grid;
    width: 100%;
    grid-auto-columns: max-content auto;
  }
  .fixed {
    position: fixed;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .input {
    cursor: text;
    border: var(--border) solid #0000;
    display: inline-flex;
    flex-shrink: 1;
    appearance: none;
    align-items: center;
    gap: calc(0.25rem * 2);
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 3);
    vertical-align: middle;
    white-space: nowrap;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: 0.875rem;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-color: var(--input-color);
    box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-field, 0.25rem) * 10);
    --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    &:where(input) {
      display: inline-block;
    }
    :where(input) {
      display: inline-block;
      height: 100%;
      width: 100%;
      appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within {
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    &:focus, &:focus-within {
      --input-color: var(--color-base-content);
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
      outline: 2px solid var(--input-color);
      outline-offset: 2px;
      isolation: isolate;
    }
    &:has(> input[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      &::placeholder {
        color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
      }
      box-shadow: none;
    }
    &:has(> input[disabled]) > input[disabled] {
      cursor: not-allowed;
    }
    &::-webkit-date-and-time-value {
      text-align: inherit;
    }
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .textarea {
    border: var(--border) solid #0000;
    min-height: calc(0.25rem * 20);
    flex-shrink: 1;
    appearance: none;
    border-radius: var(--radius-field);
    background-color: var(--color-base-100);
    padding-block: calc(0.25rem * 2);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    padding-inline-start: 0.75rem;
    padding-inline-end: 0.75rem;
    font-size: 0.875rem;
    border-color: var(--input-color);
    box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    textarea {
      appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within {
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    &:focus, &:focus-within {
      --input-color: var(--color-base-content);
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
      outline: 2px solid var(--input-color);
      outline-offset: 2px;
      isolation: isolate;
    }
    &:has(> textarea[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      &::placeholder {
        color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
      }
      box-shadow: none;
    }
    &:has(> textarea[disabled]) > textarea[disabled] {
      cursor: not-allowed;
    }
  }
  .isolate {
    isolation: isolate;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .divider {
    display: flex;
    height: calc(0.25rem * 4);
    flex-direction: row;
    align-items: center;
    align-self: stretch;
    white-space: nowrap;
    margin: var(--divider-m, 1rem 0);
    &:before, &:after {
      content: "";
      height: calc(0.25rem * 0.5);
      width: 100%;
      flex-grow: 1;
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
    @media print {
      &:before, &:after {
        border: 0.5px solid;
      }
    }
    &:not(:empty) {
      gap: calc(0.25rem * 4);
    }
  }
  .filter {
    display: flex;
    flex-wrap: wrap;
    input[type="radio"] {
      width: auto;
    }
    input {
      overflow: hidden;
      opacity: 100%;
      scale: 1;
      transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
      &:not(:last-child) {
        margin-inline-end: calc(0.25rem * 1);
      }
      &.filter-reset {
        aspect-ratio: 1 / 1;
        &::after {
          content: "×";
        }
      }
    }
    &:not(:has(input:checked:not(.filter-reset))) {
      .filter-reset, input[type="reset"] {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
    &:has(input:checked:not(.filter-reset)) {
      input:not(:checked, .filter-reset, input[type="reset"]) {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
  }
  .input {
    .label {
      display: flex;
      height: calc(100% - 0.5rem);
      align-items: center;
      padding-inline: calc(0.25rem * 3);
      font-size: inherit;
      &:first-child {
        margin-inline-start: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * 3);
        border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
      }
      &:last-child {
        margin-inline-start: calc(0.25rem * 3);
        margin-inline-end: calc(0.25rem * -3);
        border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
      }
    }
  }
  .select {
    .label {
      display: flex;
      height: calc(100% - 0.5rem);
      align-items: center;
      padding-inline: calc(0.25rem * 3);
      font-size: inherit;
      &:first-child {
        margin-inline-start: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * 3);
        border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
      }
      &:last-child {
        margin-inline-start: calc(0.25rem * 3);
        margin-inline-end: calc(0.25rem * -3);
        border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
      }
    }
  }
  .alert {
    display: grid;
    align-items: center;
    gap: calc(0.25rem * 4);
    border-radius: var(--radius-box);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 3);
    color: var(--color-base-content);
    background-color: var(--alert-color, var(--color-base-200));
    justify-content: start;
    justify-items: start;
    grid-auto-flow: column;
    grid-template-columns: auto minmax(auto, 1fr);
    text-align: start;
    border: var(--border) solid var(--color-base-200);
    font-size: 0.875rem;
    line-height: 1.25rem;
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
    &.alert-outline {
      background-color: transparent;
      color: var(--alert-color);
      box-shadow: none;
      background-image: none;
    }
    &.alert-dash {
      background-color: transparent;
      color: var(--alert-color);
      border-style: dashed;
      box-shadow: none;
      background-image: none;
    }
    &.alert-soft {
      color: var(--alert-color, var(--color-base-content));
      background: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 8%, var(--color-base-100) );
      border-color: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 10%, var(--color-base-100) );
      box-shadow: none;
      background-image: none;
    }
  }
  .badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 2);
    border-radius: var(--radius-selector);
    vertical-align: middle;
    color: var(--color-base-content);
    border: var(--border) solid var(--badge-color, var(--color-base-200));
    font-size: 0.875rem;
    width: fit-content;
    padding-inline: calc(0.25rem * 3 - var(--border));
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    background-color: var(--badge-color, var(--color-base-100));
    --size: calc(var(--size-selector, 0.25rem) * 6);
    height: var(--size);
    &.badge-outline {
      color: var(--badge-color, var(--color-base-content));
      border-color: currentColor;
      background-color: transparent;
      background-image: none;
      box-shadow: none;
    }
    &.badge-dash {
      color: var(--badge-color, var(--color-base-content));
      background-color: transparent;
      border-style: dashed;
      background-image: none;
      box-shadow: none;
    }
    &.badge-soft {
      color: var(--badge-color, var(--color-base-content));
      background-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 8%, var(--color-base-100) );
      border-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 10%, var(--color-base-100) );
      background-image: none;
      box-shadow: none;
    }
  }
  .status {
    display: inline-block;
    aspect-ratio: 1 / 1;
    width: calc(0.25rem * 2);
    height: calc(0.25rem * 2);
    border-radius: var(--radius-selector);
    background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    background-position: center;
    background-repeat: no-repeat;
    vertical-align: middle;
    color: color-mix(in oklab, var(--color-black) 30%, transparent);
    background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 );
    box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
  }
  .footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    column-gap: calc(0.25rem * 4);
    row-gap: calc(0.25rem * 10);
    font-size: 0.875rem;
    line-height: 1.25rem;
    & > * {
      display: grid;
      place-items: start;
      gap: calc(0.25rem * 2);
    }
    &.footer-center {
      grid-auto-flow: column dense;
      place-items: center;
      text-align: center;
      & > * {
        place-items: center;
      }
    }
  }
  .fieldset {
    display: grid;
    gap: calc(0.25rem * 1.5);
    padding-block: calc(0.25rem * 1);
    font-size: 0.75rem;
    grid-template-columns: 1fr;
    grid-auto-rows: max-content;
  }
  .join {
    display: inline-flex;
    align-items: stretch;
    --join-ss: 0;
    --join-se: 0;
    --join-es: 0;
    --join-ee: 0;
    :where(.join-item) {
      border-start-start-radius: var(--join-ss, 0);
      border-start-end-radius: var(--join-se, 0);
      border-end-start-radius: var(--join-es, 0);
      border-end-end-radius: var(--join-ee, 0);
      * {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
    > .join-item:where(:first-child) {
      --join-ss: var(--radius-field);
      --join-se: 0;
      --join-es: var(--radius-field);
      --join-ee: 0;
    }
    :first-child:not(:last-child) {
      :where(.join-item) {
        --join-ss: var(--radius-field);
        --join-se: 0;
        --join-es: var(--radius-field);
        --join-ee: 0;
      }
    }
    > .join-item:where(:last-child) {
      --join-ss: 0;
      --join-se: var(--radius-field);
      --join-es: 0;
      --join-ee: var(--radius-field);
    }
    :last-child:not(:first-child) {
      :where(.join-item) {
        --join-ss: 0;
        --join-se: var(--radius-field);
        --join-es: 0;
        --join-ee: var(--radius-field);
      }
    }
  }
  .label {
    display: inline-flex;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    white-space: nowrap;
    color: color-mix(in oklab, currentColor 60%, transparent);
    &:has(input) {
      cursor: pointer;
    }
  }
  .carousel {
    display: inline-flex;
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    scrollbar-width: none;
    &::-webkit-scrollbar {
      display: none;
    }
  }
  .chat {
    display: grid;
    column-gap: calc(0.25rem * 3);
    padding-block: calc(0.25rem * 1);
  }
  .mask {
    display: inline-block;
    vertical-align: middle;
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .link {
    cursor: pointer;
    text-decoration-line: underline;
    &:focus {
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible {
      outline: 2px solid currentColor;
      outline-offset: 2px;
    }
  }
  .resize {
    resize: both;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .capitalize {
    text-transform: capitalize;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .loading-spinner {
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
  }
}
@layer base {
  [data-theme='shopify-light'] {
    --color-foreground: var(--color-base-content);
  }
  [data-theme='shopify-dark'] {
    --color-foreground: var(--color-base-content);
  }
  body {
    color: rgb(var(--color-base-content));
  }
}
@layer base {
  :root {
    --alpha-button-background: 1;
    --alpha-button-border: 1;
    --alpha-link: 0.85;
    --alpha-badge-border: 0.1;
    --focused-base-outline: 0.2rem solid rgba(var(--color-foreground), 0.5);
    --focused-base-outline-offset: 0.3rem;
    --focused-base-box-shadow: 0 0 0 0.3rem rgb(var(--color-background)), 0 0 0.5rem 0.4rem rgba(var(--color-foreground), 0.3);
  }
  .product-card-wrapper .card, .contains-card--product {
    --border-radius: var(--product-card-corner-radius);
    --border-width: var(--product-card-border-width);
    --border-opacity: var(--product-card-border-opacity);
    --shadow-horizontal-offset: var(--product-card-shadow-horizontal-offset);
    --shadow-vertical-offset: var(--product-card-shadow-vertical-offset);
    --shadow-blur-radius: var(--product-card-shadow-blur-radius);
    --shadow-opacity: var(--product-card-shadow-opacity);
    --shadow-visible: var(--product-card-shadow-visible);
    --image-padding: var(--product-card-image-padding);
    --text-alignment: var(--product-card-text-alignment);
  }
  .collection-card-wrapper .card, .contains-card--collection {
    --border-radius: var(--collection-card-corner-radius);
    --border-width: var(--collection-card-border-width);
    --border-opacity: var(--collection-card-border-opacity);
    --shadow-horizontal-offset: var(--collection-card-shadow-horizontal-offset);
    --shadow-vertical-offset: var(--collection-card-shadow-vertical-offset);
    --shadow-blur-radius: var(--collection-card-shadow-blur-radius);
    --shadow-opacity: var(--collection-card-shadow-opacity);
    --shadow-visible: var(--collection-card-shadow-visible);
    --image-padding: var(--collection-card-image-padding);
    --text-alignment: var(--collection-card-text-alignment);
  }
  .article-card-wrapper .card, .contains-card--article {
    --border-radius: var(--blog-card-corner-radius);
    --border-width: var(--blog-card-border-width);
    --border-opacity: var(--blog-card-border-opacity);
    --shadow-horizontal-offset: var(--blog-card-shadow-horizontal-offset);
    --shadow-vertical-offset: var(--blog-card-shadow-vertical-offset);
    --shadow-blur-radius: var(--blog-card-shadow-blur-radius);
    --shadow-opacity: var(--blog-card-shadow-opacity);
    --shadow-visible: var(--blog-card-shadow-visible);
    --image-padding: var(--blog-card-image-padding);
    --text-alignment: var(--blog-card-text-alignment);
  }
  .contains-content-container, .content-container {
    --border-radius: var(--text-boxes-radius);
    --border-width: var(--text-boxes-border-width);
    --border-opacity: var(--text-boxes-border-opacity);
    --shadow-horizontal-offset: var(--text-boxes-shadow-horizontal-offset);
    --shadow-vertical-offset: var(--text-boxes-shadow-vertical-offset);
    --shadow-blur-radius: var(--text-boxes-shadow-blur-radius);
    --shadow-opacity: var(--text-boxes-shadow-opacity);
    --shadow-visible: var(--text-boxes-shadow-visible);
  }
  .contains-media, .global-media-settings {
    --border-radius: var(--media-radius);
    --border-width: var(--media-border-width);
    --border-opacity: var(--media-border-opacity);
    --shadow-horizontal-offset: var(--media-shadow-horizontal-offset);
    --shadow-vertical-offset: var(--media-shadow-vertical-offset);
    --shadow-blur-radius: var(--media-shadow-blur-radius);
    --shadow-opacity: var(--media-shadow-opacity);
    --shadow-visible: var(--media-shadow-visible);
  }
  .page-width {
    max-width: var(--page-width);
    margin: 0 auto;
    padding: 0 1.5rem;
  }
  body:has(.section-header .drawer-menu) .announcement-bar-section .page-width {
    max-width: 100%;
  }
  .page-width.drawer-menu {
    max-width: 100%;
  }
  .page-width-desktop {
    padding: 0;
    margin: 0 auto;
  }
  .utility-bar__grid.page-width {
    padding-left: 3rem;
    padding-right: 3rem;
  }
  @media screen and (min-width: 750px) {
    .page-width {
      padding: 0 5rem;
    }
    .header.page-width, .utility-bar__grid.page-width {
      padding-left: 3.2rem;
      padding-right: 3.2rem;
    }
    .page-width--narrow {
      padding: 0 9rem;
    }
    .page-width-desktop {
      padding: 0;
    }
    .page-width-tablet {
      padding: 0 5rem;
    }
  }
  @media screen and (min-width: 990px) {
    .header:not(.drawer-menu).page-width {
      padding-left: 5rem;
      padding-right: 5rem;
    }
    .page-width--narrow {
      max-width: 72.6rem;
      padding: 0;
    }
    .page-width-desktop {
      max-width: var(--page-width);
      padding: 0 5rem;
    }
  }
  .isolate {
    position: relative;
    z-index: 0;
  }
  .section + .section {
    margin-top: var(--spacing-sections-mobile);
  }
  @media screen and (min-width: 750px) {
    .section + .section {
      margin-top: var(--spacing-sections-desktop);
    }
  }
  .element-margin-top {
    margin-top: 5rem;
  }
  @media screen and (min-width: 750px) {
    .element-margin {
      margin-top: calc(5rem + var(--page-width-margin));
    }
  }
  .background-secondary {
    background-color: rgba(var(--color-foreground), 0.04);
  }
  .grid-auto-flow {
    display: grid;
    grid-auto-flow: column;
  }
  .page-margin, .shopify-challenge__container {
    margin: 7rem auto;
  }
  .rte-width {
    max-width: 82rem;
    margin: 0 auto 2rem;
  }
  .list-unstyled {
    margin: 0;
    padding: 0;
    list-style: none;
  }
  .hidden {
    display: none !important;
  }
  .visually-hidden {
    position: absolute !important;
    overflow: hidden;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    border: 0;
    clip: rect(0 0 0 0);
    word-wrap: normal !important;
  }
  .visually-hidden--inline {
    margin: 0;
    height: 1em;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .skip-to-content-link:focus {
    z-index: 9999;
    position: inherit;
    overflow: auto;
    width: auto;
    height: auto;
    clip: auto;
  }
  .full-width-link {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 2;
  }
  ::selection {
    background-color: rgba(var(--color-foreground), 0.2);
  }
  .text-body {
    font-size: 1.5rem;
    letter-spacing: 0.06rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
    font-family: var(--font-body-family);
    font-style: var(--font-body-style);
    font-weight: var(--font-body-weight);
  }
  h1, h2, h3, h4, h5, .h0, .h1, .h2, .h3, .h4, .h5 {
    font-family: var(--font-heading-family);
    font-style: var(--font-heading-style);
    font-weight: var(--font-heading-weight);
    letter-spacing: calc(var(--font-heading-scale) * 0.06rem);
    color: rgb(var(--color-foreground));
    line-height: calc(1 + 0.3 / max(1, var(--font-heading-scale)));
    word-break: break-word;
  }
  .hxxl {
    font-size: clamp(calc(var(--font-heading-scale) * 5.6rem), 14vw, calc(var(--font-heading-scale) * 7.2rem));
    line-height: 1.1;
  }
  .hxl {
    font-size: calc(var(--font-heading-scale) * 5rem);
    line-height: calc(1 + 0.3 / max(1, var(--font-heading-scale)));
  }
  @media only screen and (min-width: 750px) {
    .hxl {
      font-size: calc(var(--font-heading-scale) * 6.2rem);
    }
  }
  .h0 {
    font-size: calc(var(--font-heading-scale) * 4rem);
  }
  @media only screen and (min-width: 750px) {
    .h0 {
      font-size: calc(var(--font-heading-scale) * 5.2rem);
    }
  }
  h1, .h1 {
    font-size: calc(var(--font-heading-scale) * 3rem);
  }
  @media only screen and (min-width: 750px) {
    h1, .h1 {
      font-size: calc(var(--font-heading-scale) * 4rem);
    }
  }
  h2, .h2 {
    font-size: calc(var(--font-heading-scale) * 2rem);
  }
  @media only screen and (min-width: 750px) {
    h2, .h2 {
      font-size: calc(var(--font-heading-scale) * 2.4rem);
    }
  }
  h3, .h3 {
    font-size: calc(var(--font-heading-scale) * 1.7rem);
  }
  @media only screen and (min-width: 750px) {
    h3, .h3 {
      font-size: calc(var(--font-heading-scale) * 1.8rem);
    }
  }
  h4, .h4 {
    font-family: var(--font-heading-family);
    font-style: var(--font-heading-style);
    font-size: calc(var(--font-heading-scale) * 1.5rem);
  }
  h5, .h5 {
    font-size: calc(var(--font-heading-scale) * 1.2rem);
  }
  @media only screen and (min-width: 750px) {
    h5, .h5 {
      font-size: calc(var(--font-heading-scale) * 1.3rem);
    }
  }
  h6, .h6 {
    color: rgba(var(--color-foreground), 0.75);
    margin-block-start: 1.67em;
    margin-block-end: 1.67em;
  }
  blockquote {
    font-style: italic;
    color: rgba(var(--color-foreground), 0.75);
    border-left: 0.2rem solid rgba(var(--color-foreground), 0.2);
    padding-left: 1rem;
  }
  @media screen and (min-width: 750px) {
    blockquote {
      padding-left: 1.5rem;
    }
  }
  .caption {
    font-size: 1rem;
    letter-spacing: 0.07rem;
    line-height: calc(1 + 0.7 / var(--font-body-scale));
  }
  @media screen and (min-width: 750px) {
    .caption {
      font-size: 1.2rem;
    }
  }
  .caption-with-letter-spacing {
    font-size: 1rem;
    letter-spacing: 0.13rem;
    line-height: calc(1 + 0.2 / var(--font-body-scale));
    text-transform: uppercase;
  }
  .caption-with-letter-spacing--medium {
    font-size: 1.2rem;
    letter-spacing: 0.16rem;
  }
  .caption-with-letter-spacing--large {
    font-size: 1.4rem;
    letter-spacing: 0.18rem;
  }
  .caption-large, .customer .field input, .customer select, .field__input, .form__label, .select__select {
    font-size: 1.3rem;
    line-height: calc(1 + 0.5 / var(--font-body-scale));
    letter-spacing: 0.04rem;
  }
  .color-foreground {
    color: rgb(var(--color-foreground));
  }
  table:not([class]) {
    table-layout: fixed;
    border-collapse: collapse;
    font-size: 1.4rem;
    border-style: hidden;
    box-shadow: 0 0 0 0.1rem rgba(var(--color-foreground), 0.2);
  }
  table:not([class]) td, table:not([class]) th {
    padding: 1em;
    border: 0.1rem solid rgba(var(--color-foreground), 0.2);
  }
  @media screen and (max-width: 749px) {
    .small-hide {
      display: none !important;
    }
  }
  @media screen and (min-width: 750px) and (max-width: 989px) {
    .medium-hide {
      display: none !important;
    }
  }
  @media screen and (min-width: 990px) {
    .large-up-hide {
      display: none !important;
    }
  }
  .left {
    text-align: left;
  }
  .center {
    text-align: center;
  }
  .right {
    text-align: right;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .light {
    opacity: 0.7;
  }
  a:empty, ul:empty, dl:empty, div:empty, section:empty, article:empty, p:empty, h1:empty, h2:empty, h3:empty, h4:empty, h5:empty, h6:empty {
    display: none;
  }
  .link, .customer a {
    cursor: pointer;
    display: inline-block;
    border: none;
    box-shadow: none;
    text-decoration: underline;
    text-underline-offset: 0.3rem;
    color: rgb(var(--color-link));
    background-color: transparent;
    font-size: 1.4rem;
    font-family: inherit;
  }
  .link--text {
    color: rgb(var(--color-foreground));
  }
  .link--text:hover {
    color: rgba(var(--color-foreground), 0.75);
  }
  .link-with-icon {
    display: inline-flex;
    font-size: 1.4rem;
    font-weight: 600;
    letter-spacing: 0.1rem;
    text-decoration: none;
    margin-bottom: 4.5rem;
    white-space: nowrap;
  }
  .link-with-icon .icon {
    width: 1.5rem;
    margin-left: 1rem;
  }
  a:not([href]) {
    cursor: not-allowed;
  }
  .circle-divider::after {
    content: '\2022';
    margin: 0 1.3rem 0 1.5rem;
  }
  .circle-divider:last-of-type::after {
    display: none;
  }
  hr {
    border: none;
    height: 0.1rem;
    background-color: rgba(var(--color-foreground), 0.2);
    display: block;
    margin: 5rem 0;
  }
  @media screen and (min-width: 750px) {
    hr {
      margin: 7rem 0;
    }
  }
  .full-unstyled-link {
    text-decoration: none;
    color: currentColor;
    display: block;
  }
  .placeholder {
    background-color: rgba(var(--color-foreground), 0.04);
    color: rgba(var(--color-foreground), 0.55);
    fill: rgba(var(--color-foreground), 0.55);
  }
  details > * {
    box-sizing: border-box;
  }
  .break {
    word-break: break-word;
  }
  .visibility-hidden {
    visibility: hidden;
  }
  @media (prefers-reduced-motion) {
    .motion-reduce {
      transition: none !important;
      animation: none !important;
    }
  }
  :root {
    --duration-short: 100ms;
    --duration-default: 200ms;
    --duration-announcement-bar: 250ms;
    --duration-medium: 300ms;
    --duration-long: 500ms;
    --duration-extra-long: 600ms;
    --duration-extra-longer: 750ms;
    --duration-extended: 3s;
    --ease-out-slow: cubic-bezier(0, 0, 0.3, 1);
    --animation-slide-in: slideIn var(--duration-extra-long) var(--ease-out-slow) forwards;
    --animation-fade-in: fadeIn var(--duration-extra-long) var(--ease-out-slow);
  }
  .underlined-link, .customer a, .inline-richtext a {
    text-underline-offset: 0.3rem;
    text-decoration-thickness: 0.1rem;
    transition: text-decoration-thickness ease 100ms;
  }
  .underlined-link, .customer a {
    color: rgba(var(--color-link), var(--alpha-link));
  }
  .inline-richtext a, .rte.inline-richtext a {
    color: currentColor;
  }
  .underlined-link:hover, .customer a:hover, .inline-richtext a:hover {
    color: rgb(var(--color-link));
    text-decoration-thickness: 0.2rem;
  }
  .icon-arrow {
    width: 1.5rem;
  }
  h3 .icon-arrow, .h3 .icon-arrow {
    width: calc(var(--font-heading-scale) * 1.5rem);
  }
  .animate-arrow .icon-arrow path {
    transform: translateX(-0.25rem);
    transition: transform var(--duration-short) ease;
  }
  .animate-arrow:hover .icon-arrow path {
    transform: translateX(-0.05rem);
  }
  .svg-wrapper {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    width: 20px;
    height: 20px;
  }
  .svg-wrapper > svg {
    height: 100%;
    width: 100%;
  }
  summary {
    cursor: pointer;
    list-style: none;
    position: relative;
  }
  summary .icon-caret {
    position: absolute;
    height: 0.6rem;
    right: 1.5rem;
    top: calc(50% - 0.2rem);
  }
  summary::-webkit-details-marker {
    display: none;
  }
  .disclosure-has-popup {
    position: relative;
  }
  .disclosure-has-popup[open] > summary::before {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 2;
    display: block;
    cursor: default;
    content: ' ';
    background: transparent;
  }
  .disclosure-has-popup > summary::before {
    display: none;
  }
  .disclosure-has-popup[open] > summary + * {
    z-index: 100;
  }
  @media screen and (min-width: 750px) {
    .disclosure-has-popup[open] > summary + * {
      z-index: 4;
    }
    .facets .disclosure-has-popup[open] > summary + * {
      z-index: 2;
    }
  }
  .placeholder-svg {
    height: 100%;
    width: 100%;
  }
  *:focus {
    outline: 0;
    box-shadow: none;
  }
  *:focus-visible {
    outline: var(--focused-base-outline);
    outline-offset: var(--focused-base-outline-offset);
    box-shadow: var(--focused-base-box-shadow);
  }
  .focused {
    outline: var(--focused-base-outline);
    outline-offset: var(--focused-base-outline-offset);
    box-shadow: var(--focused-base-box-shadow);
  }
  .focus-inset:focus-visible {
    outline: 0.2rem solid rgba(var(--color-foreground), 0.5);
    outline-offset: -0.2rem;
    box-shadow: 0 0 0.2rem 0 rgba(var(--color-foreground), 0.3);
  }
  .focused.focus-inset {
    outline: 0.2rem solid rgba(var(--color-foreground), 0.5);
    outline-offset: -0.2rem;
    box-shadow: 0 0 0.2rem 0 rgba(var(--color-foreground), 0.3);
  }
  .focus-none {
    box-shadow: none !important;
    outline: 0 !important;
  }
  .focus-offset:focus-visible {
    outline: 0.2rem solid rgba(var(--color-foreground), 0.5);
    outline-offset: 1rem;
    box-shadow: 0 0 0 1rem rgb(var(--color-background)), 0 0 0.2rem 1.2rem rgba(var(--color-foreground), 0.3);
  }
  .focus-offset.focused {
    outline: 0.2rem solid rgba(var(--color-foreground), 0.5);
    outline-offset: 1rem;
    box-shadow: 0 0 0 1rem rgb(var(--color-background)), 0 0 0.2rem 1.2rem rgba(var(--color-foreground), 0.3);
  }
  .title, .title-wrapper-with-link {
    margin: 3rem 0 2rem;
  }
  .title-wrapper-with-link .title {
    margin: 0;
  }
  .title .link {
    font-size: inherit;
  }
  .title-wrapper {
    margin-bottom: 3rem;
  }
  .title-wrapper-with-link {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    gap: 1rem;
    margin-bottom: 3rem;
    flex-wrap: wrap;
  }
  .title--primary {
    margin: 4rem 0;
  }
  .title-wrapper--self-padded-tablet-down, .title-wrapper--self-padded-mobile {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
  @media screen and (min-width: 750px) {
    .title-wrapper--self-padded-mobile {
      padding-left: 0;
      padding-right: 0;
    }
  }
  @media screen and (min-width: 990px) {
    .title, .title-wrapper-with-link {
      margin: 5rem 0 3rem;
    }
    .title--primary {
      margin: 2rem 0;
    }
    .title-wrapper-with-link {
      align-items: center;
    }
    .title-wrapper-with-link .title {
      margin-bottom: 0;
    }
    .title-wrapper--self-padded-tablet-down {
      padding-left: 0;
      padding-right: 0;
    }
  }
  .title-wrapper-with-link .link-with-icon {
    margin: 0;
    flex-shrink: 0;
    display: flex;
    align-items: center;
  }
  .title-wrapper-with-link .link-with-icon .svg-wrapper {
    width: 1.5rem;
  }
  .title-wrapper-with-link a {
    margin-top: 0;
    flex-shrink: 0;
  }
  .title-wrapper--no-top-margin {
    margin-top: 0;
  }
  .title-wrapper--no-top-margin > .title {
    margin-top: 0;
  }
  .subtitle {
    font-size: 1.8rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
    letter-spacing: 0.06rem;
    color: rgba(var(--color-foreground), 0.7);
  }
  .subtitle--small {
    font-size: 1.4rem;
    letter-spacing: 0.1rem;
  }
  .subtitle--medium {
    font-size: 1.6rem;
    letter-spacing: 0.08rem;
  }
  .grid {
    display: flex;
    flex-wrap: wrap;
    margin-bottom: 2rem;
    padding: 0;
    list-style: none;
    column-gap: var(--grid-mobile-horizontal-spacing);
    row-gap: var(--grid-mobile-vertical-spacing);
  }
  @media screen and (min-width: 750px) {
    .grid {
      column-gap: var(--grid-desktop-horizontal-spacing);
      row-gap: var(--grid-desktop-vertical-spacing);
    }
  }
  .grid:last-child {
    margin-bottom: 0;
  }
  .grid__item {
    width: calc(25% - var(--grid-mobile-horizontal-spacing) * 3 / 4);
    max-width: calc(50% - var(--grid-mobile-horizontal-spacing) / 2);
    flex-grow: 1;
    flex-shrink: 0;
  }
  @media screen and (min-width: 750px) {
    .grid__item {
      width: calc(25% - var(--grid-desktop-horizontal-spacing) * 3 / 4);
      max-width: calc(50% - var(--grid-desktop-horizontal-spacing) / 2);
    }
  }
  .grid--gapless.grid {
    column-gap: 0;
    row-gap: 0;
  }
  @media screen and (max-width: 749px) {
    .grid__item.slider__slide--full-width {
      width: 100%;
      max-width: none;
    }
  }
  .grid--1-col .grid__item {
    max-width: 100%;
    width: 100%;
  }
  .grid--3-col .grid__item {
    width: calc(33.33% - var(--grid-mobile-horizontal-spacing) * 2 / 3);
  }
  @media screen and (min-width: 750px) {
    .grid--3-col .grid__item {
      width: calc(33.33% - var(--grid-desktop-horizontal-spacing) * 2 / 3);
    }
  }
  .grid--2-col .grid__item {
    width: calc(50% - var(--grid-mobile-horizontal-spacing) / 2);
  }
  @media screen and (min-width: 750px) {
    .grid--2-col .grid__item {
      width: calc(50% - var(--grid-desktop-horizontal-spacing) / 2);
    }
    .grid--4-col-tablet .grid__item {
      width: calc(25% - var(--grid-desktop-horizontal-spacing) * 3 / 4);
    }
    .grid--3-col-tablet .grid__item {
      width: calc(33.33% - var(--grid-desktop-horizontal-spacing) * 2 / 3);
    }
    .grid--2-col-tablet .grid__item {
      width: calc(50% - var(--grid-desktop-horizontal-spacing) / 2);
    }
  }
  @media screen and (max-width: 989px) {
    .grid--1-col-tablet-down .grid__item {
      width: 100%;
      max-width: 100%;
    }
    .slider--tablet.grid--peek {
      margin: 0;
      width: 100%;
    }
    .slider--tablet.grid--peek .grid__item {
      box-sizing: content-box;
      margin: 0;
    }
    .slider.slider--tablet .scroll-trigger.animate--slide-in, .slider.slider--mobile .scroll-trigger.animate--slide-in {
      animation: none;
      opacity: 1;
      transform: inherit;
    }
    .scroll-trigger:not(.scroll-trigger--offscreen) .slider--tablet {
      animation: var(--animation-slide-in);
    }
  }
  @media screen and (min-width: 990px) {
    .grid--6-col-desktop .grid__item {
      width: calc(16.66% - var(--grid-desktop-horizontal-spacing) * 5 / 6);
      max-width: calc(16.66% - var(--grid-desktop-horizontal-spacing) * 5 / 6);
    }
    .grid--5-col-desktop .grid__item {
      width: calc(20% - var(--grid-desktop-horizontal-spacing) * 4 / 5);
      max-width: calc(20% - var(--grid-desktop-horizontal-spacing) * 4 / 5);
    }
    .grid--4-col-desktop .grid__item {
      width: calc(25% - var(--grid-desktop-horizontal-spacing) * 3 / 4);
      max-width: calc(25% - var(--grid-desktop-horizontal-spacing) * 3 / 4);
    }
    .grid--3-col-desktop .grid__item {
      width: calc(33.33% - var(--grid-desktop-horizontal-spacing) * 2 / 3);
      max-width: calc(33.33% - var(--grid-desktop-horizontal-spacing) * 2 / 3);
    }
    .grid--2-col-desktop .grid__item {
      width: calc(50% - var(--grid-desktop-horizontal-spacing) / 2);
      max-width: calc(50% - var(--grid-desktop-horizontal-spacing) / 2);
    }
    .slider.slider--desktop .scroll-trigger.animate--slide-in {
      animation: none;
      opacity: 1;
      transform: inherit;
    }
    .scroll-trigger:not(.scroll-trigger--offscreen) .slider--desktop {
      animation: var(--animation-slide-in);
    }
  }
  @media screen and (min-width: 990px) {
    .grid--1-col-desktop {
      flex: 0 0 100%;
      max-width: 100%;
    }
    .grid--1-col-desktop .grid__item {
      width: 100%;
      max-width: 100%;
    }
  }
  @media screen and (max-width: 749px) {
    .grid--peek.slider--mobile {
      margin: 0;
      width: 100%;
    }
    .grid--peek.slider--mobile .grid__item {
      box-sizing: content-box;
      margin: 0;
    }
    .grid--peek .grid__item {
      min-width: 35%;
    }
    .grid--peek.slider .grid__item:first-of-type {
      margin-left: 1.5rem;
    }
    .grid--peek.slider:after {
      margin-left: calc(-1 * var(--grid-mobile-horizontal-spacing));
    }
    .grid--2-col-tablet-down .grid__item {
      width: calc(50% - var(--grid-mobile-horizontal-spacing) / 2);
    }
    .slider--tablet.grid--peek.grid--2-col-tablet-down .grid__item, .grid--peek .grid__item {
      width: calc(50% - var(--grid-mobile-horizontal-spacing) - 3rem);
    }
    .slider--tablet.grid--peek.grid--1-col-tablet-down .grid__item, .slider--mobile.grid--peek.grid--1-col-tablet-down .grid__item {
      width: calc(100% - var(--grid-mobile-horizontal-spacing) - 3rem);
    }
  }
  @media screen and (min-width: 750px) and (max-width: 989px) {
    .slider--tablet.grid--peek .grid__item {
      width: calc(25% - var(--grid-desktop-horizontal-spacing) - 3rem);
    }
    .slider--tablet.grid--peek.grid--3-col-tablet .grid__item {
      width: calc(33.33% - var(--grid-desktop-horizontal-spacing) - 3rem);
    }
    .slider--tablet.grid--peek.grid--2-col-tablet .grid__item, .slider--tablet.grid--peek.grid--2-col-tablet-down .grid__item {
      width: calc(50% - var(--grid-desktop-horizontal-spacing) - 3rem);
    }
    .slider--tablet.grid--peek .grid__item:first-of-type {
      margin-left: 1.5rem;
    }
    .grid--2-col-tablet-down .grid__item {
      width: calc(50% - var(--grid-desktop-horizontal-spacing) / 2);
    }
    .grid--1-col-tablet-down.grid--peek .grid__item {
      width: calc(100% - var(--grid-desktop-horizontal-spacing) - 3rem);
    }
  }
  .media {
    display: block;
    background-color: rgba(var(--color-foreground), 0.1);
    position: relative;
    overflow: hidden;
  }
  .media--transparent {
    background-color: transparent;
  }
  .media > *:not(.zoom):not(.deferred-media__poster-button), .media model-viewer {
    display: block;
    max-width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
  }
  .media > img {
    object-fit: cover;
    object-position: center center;
    transition: opacity 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
  .media--square {
    padding-bottom: 100%;
  }
  .media--portrait {
    padding-bottom: 125%;
  }
  .media--landscape {
    padding-bottom: 66.6%;
  }
  .media--cropped {
    padding-bottom: 56%;
  }
  .media--16-9 {
    padding-bottom: 56.25%;
  }
  .media--circle {
    padding-bottom: 100%;
    border-radius: 50%;
  }
  .media.media--hover-effect > img + img {
    opacity: 0;
  }
  @media screen and (min-width: 990px) {
    .media--cropped {
      padding-bottom: 63%;
    }
  }
  deferred-media {
    display: block;
  }
  .button--secondary, .button--tertiary {
    --color-button: var(--color-secondary-button);
    --color-button-text: var(--color-secondary-button-text);
  }
  .button--tertiary {
    --alpha-button-background: 0;
    --alpha-button-border: 0.2;
  }
  .button, .shopify-challenge__button, .customer button, button.shopify-payment-button__button--unbranded {
    --shadow-horizontal-offset: var(--buttons-shadow-horizontal-offset);
    --shadow-vertical-offset: var(--buttons-shadow-vertical-offset);
    --shadow-blur-radius: var(--buttons-shadow-blur-radius);
    --shadow-opacity: var(--buttons-shadow-opacity);
    --shadow-visible: var(--buttons-shadow-visible);
    --border-offset: var(--buttons-border-offset);
    --border-opacity: calc(1 - var(--buttons-border-opacity));
    border-radius: var(--buttons-radius-outset);
    position: relative;
  }
  .button, .shopify-challenge__button, .customer button, button.shopify-payment-button__button--unbranded {
    min-width: calc(12rem + var(--buttons-border-width) * 2);
    min-height: calc(4.5rem + var(--buttons-border-width) * 2);
  }
  .button, .shopify-challenge__button, .customer button {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    border: 0;
    padding: 0 3rem;
    cursor: pointer;
    font: inherit;
    font-size: 1.5rem;
    text-decoration: none;
    color: rgb(var(--color-button-text));
    transition: box-shadow var(--duration-short) ease;
    -webkit-appearance: none;
    appearance: none;
    background-color: rgba(var(--color-button), var(--alpha-button-background));
  }
  .button:before, .shopify-challenge__button:before, .customer button:before, .shopify-payment-button__button--unbranded:before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
    border-radius: var(--buttons-radius-outset);
    box-shadow: var(--shadow-horizontal-offset) var(--shadow-vertical-offset) var(--shadow-blur-radius) rgba(var(--color-shadow), var(--shadow-opacity));
  }
  .button:after, .shopify-challenge__button:after, .customer button:after, .shopify-payment-button__button--unbranded:after {
    content: '';
    position: absolute;
    top: var(--buttons-border-width);
    right: var(--buttons-border-width);
    bottom: var(--buttons-border-width);
    left: var(--buttons-border-width);
    z-index: 1;
    border-radius: var(--buttons-radius);
    box-shadow: 0 0 0 calc(var(--buttons-border-width) + var(--border-offset)) rgba(var(--color-button-text), var(--border-opacity)), 0 0 0 var(--buttons-border-width) rgba(var(--color-button), var(--alpha-button-background));
    transition: box-shadow var(--duration-short) ease;
  }
  .button:not([disabled]):hover::after, .shopify-challenge__button:hover::after, .customer button:hover::after, .shopify-payment-button__button--unbranded:hover::after {
    --border-offset: 1.3px;
    box-shadow: 0 0 0 calc(var(--buttons-border-width) + var(--border-offset)) rgba(var(--color-button-text), var(--border-opacity)), 0 0 0 calc(var(--buttons-border-width) + 1px) rgba(var(--color-button), var(--alpha-button-background));
  }
  .button--secondary:after {
    --border-opacity: var(--buttons-border-opacity);
  }
  .button:focus-visible, .button:focus, .button.focused, .shopify-payment-button__button--unbranded:focus-visible, .shopify-payment-button__button--unbranded:focus {
    outline: 0;
    box-shadow: 0 0 0 0.3rem rgb(var(--color-background)), 0 0 0 0.5rem rgba(var(--color-foreground), 0.5), 0 0 0.5rem 0.4rem rgba(var(--color-foreground), 0.3);
  }
  .button:focus:not(:focus-visible):not(.focused), .shopify-payment-button__button--unbranded:focus:not(:focus-visible):not(.focused) {
    box-shadow: inherit;
  }
  .button::selection, .shopify-challenge__button::selection, .customer button::selection {
    background-color: rgba(var(--color-button-text), 0.3);
  }
  .button, .button-label, .shopify-challenge__button, .customer button {
    font-size: 1.5rem;
    letter-spacing: 0.1rem;
    line-height: calc(1 + 0.2 / var(--font-body-scale));
  }
  .button--tertiary {
    font-size: 1.2rem;
    padding: 1rem 1.5rem;
    min-width: calc(9rem + var(--buttons-border-width) * 2);
    min-height: calc(3.5rem + var(--buttons-border-width) * 2);
  }
  .button--small {
    padding: 1.2rem 2.6rem;
  }
  shopify-accelerated-checkout {
    --shopify-accelerated-checkout-button-border-radius: var(--buttons-radius-outset);
    --shopify-accelerated-checkout-button-box-shadow: var(--shadow-horizontal-offset) var(--shadow-vertical-offset) var(--shadow-blur-radius)
    rgba(var(--color-shadow), var(--shadow-opacity));
  }
  shopify-accelerated-checkout-cart {
    --shopify-accelerated-checkout-button-border-radius: var(--buttons-radius-outset);
    --shopify-accelerated-checkout-button-box-shadow: var(--shadow-horizontal-offset) var(--shadow-vertical-offset) var(--shadow-blur-radius)
    rgba(var(--color-shadow), var(--shadow-opacity));
  }
  .button:disabled, .button[aria-disabled='true'], .button.disabled, .customer button:disabled, .customer button[aria-disabled='true'], .customer button.disabled, .quantity__button.disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
  .button--full-width {
    display: flex;
    width: 100%;
  }
  .button.loading {
    color: transparent;
    position: relative;
  }
  @media screen and (forced-colors: active) {
    .button.loading {
      color: rgb(var(--color-foreground));
    }
  }
  .button.loading > .loading__spinner {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    position: absolute;
    height: 100%;
    display: flex;
    align-items: center;
  }
  .button.loading > .loading__spinner .spinner {
    width: fit-content;
  }
  .button.loading > .loading__spinner .path {
    stroke: rgb(var(--color-button-text));
  }
  .share-button {
    display: block;
    position: relative;
  }
  .share-button details {
    width: fit-content;
  }
  .share-button__button {
    font-size: 1.4rem;
    display: flex;
    align-items: center;
    color: rgb(var(--color-link));
    margin-left: 0;
    padding-left: 0;
    min-height: 4.4rem;
  }
  details[open] > .share-button__fallback {
    animation: animateMenuOpen var(--duration-default) ease;
  }
  .share-button__button:hover {
    text-decoration: underline;
    text-underline-offset: 0.3rem;
  }
  .share-button__button, .share-button__fallback button {
    cursor: pointer;
    background-color: transparent;
    border: none;
  }
  .share-button__button .icon-share {
    height: 1.2rem;
    margin-right: 1rem;
    min-width: 1.3rem;
  }
  .share-button__fallback {
    display: flex;
    align-items: center;
    position: absolute;
    top: 3rem;
    left: 0.1rem;
    z-index: 3;
    width: 100%;
    min-width: max-content;
    border-radius: var(--inputs-radius);
    border: 0;
  }
  .share-button__fallback:after {
    pointer-events: none;
    content: '';
    position: absolute;
    top: var(--inputs-border-width);
    right: var(--inputs-border-width);
    bottom: var(--inputs-border-width);
    left: var(--inputs-border-width);
    border: 0.1rem solid transparent;
    border-radius: var(--inputs-radius);
    box-shadow: 0 0 0 var(--inputs-border-width) rgba(var(--color-foreground), var(--inputs-border-opacity));
    transition: box-shadow var(--duration-short) ease;
    z-index: 1;
  }
  .share-button__fallback:before {
    background: rgb(var(--color-background));
    pointer-events: none;
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border-radius: var(--inputs-radius-outset);
    box-shadow: var(--inputs-shadow-horizontal-offset) var(--inputs-shadow-vertical-offset) var(--inputs-shadow-blur-radius) rgba(var(--color-shadow), var(--inputs-shadow-opacity));
    z-index: -1;
  }
  .share-button__fallback button {
    width: 4.4rem;
    height: 4.4rem;
    padding: 0;
    flex-shrink: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    right: var(--inputs-border-width);
  }
  .share-button__fallback button:hover {
    color: rgba(var(--color-foreground), 0.75);
  }
  .share-button__fallback button:hover .svg-wrapper {
    transform: scale(1.07);
  }
  .share-button__close:not(.hidden) + .share-button__copy {
    display: none;
  }
  .share-button__close, .share-button__copy {
    background-color: transparent;
    color: rgb(var(--color-foreground));
  }
  .share-button__copy:focus-visible, .share-button__close:focus-visible {
    background-color: rgb(var(--color-background));
    z-index: 2;
  }
  .share-button__copy:focus, .share-button__close:focus {
    background-color: rgb(var(--color-background));
    z-index: 2;
  }
  .field:not(:focus-visible):not(.focused) + .share-button__copy:not(:focus-visible):not(.focused), .field:not(:focus-visible):not(.focused) + .share-button__close:not(:focus-visible):not(.focused) {
    background-color: inherit;
  }
  .share-button__fallback .field:after, .share-button__fallback .field:before {
    content: none;
  }
  .share-button__fallback .field {
    border-radius: 0;
    min-width: auto;
    min-height: auto;
    transition: none;
  }
  .share-button__fallback .field__input:focus, .share-button__fallback .field__input:-webkit-autofill {
    outline: 0.2rem solid rgba(var(--color-foreground), 0.5);
    outline-offset: 0.1rem;
    box-shadow: 0 0 0 0.1rem rgb(var(--color-background)), 0 0 0.5rem 0.4rem rgba(var(--color-foreground), 0.3);
  }
  .share-button__fallback .field__input {
    box-shadow: none;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    filter: none;
    min-width: auto;
    min-height: auto;
  }
  .share-button__fallback .field__input:hover {
    box-shadow: none;
  }
  .share-button__fallback .icon {
    width: 1.5rem;
    height: 1.5rem;
  }
  .share-button__message:not(:empty) {
    display: flex;
    align-items: center;
    width: 100%;
    height: 100%;
    margin-top: 0;
    padding: 0.8rem 0 0.8rem 1.5rem;
    margin: var(--inputs-border-width);
  }
  .share-button__message:not(:empty):not(.hidden) ~ * {
    display: none;
  }
  .field__input, .select__select, .customer .field input, .customer select {
    -webkit-appearance: none;
    appearance: none;
    background-color: rgb(var(--color-background));
    color: rgb(var(--color-foreground));
    font-family: var(--font-body-family);
    font-style: var(--font-body-style);
    font-weight: var(--font-body-weight);
    font-size: 1.6rem;
    width: 100%;
    box-sizing: border-box;
    transition: box-shadow var(--duration-short) ease;
    border-radius: var(--inputs-radius);
    height: 4.5rem;
    min-height: calc(var(--inputs-border-width) * 2);
    min-width: calc(7rem + (var(--inputs-border-width) * 2));
    position: relative;
    border: 0;
  }
  .field:before, .select:before, .customer .field:before, .customer select:before, .localization-form__select:before {
    pointer-events: none;
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border-radius: var(--inputs-radius-outset);
    box-shadow: var(--inputs-shadow-horizontal-offset) var(--inputs-shadow-vertical-offset) var(--inputs-shadow-blur-radius) rgba(var(--color-shadow), var(--inputs-shadow-opacity));
    z-index: -1;
  }
  .field:after, .select:after, .customer .field:after, .customer select:after, .localization-form__select:after {
    pointer-events: none;
    content: '';
    position: absolute;
    top: var(--inputs-border-width);
    right: var(--inputs-border-width);
    bottom: var(--inputs-border-width);
    left: var(--inputs-border-width);
    border: 0.1rem solid transparent;
    border-radius: var(--inputs-radius);
    box-shadow: 0 0 0 var(--inputs-border-width) rgba(var(--color-foreground), var(--inputs-border-opacity));
    transition: box-shadow var(--duration-short) ease;
    z-index: 1;
  }
  .select__select {
    font-family: var(--font-body-family);
    font-style: var(--font-body-style);
    font-weight: var(--font-body-weight);
    font-size: 1.2rem;
    color: rgba(var(--color-foreground), 0.75);
  }
  .field:hover.field:after, .select:hover.select:after, .select__select:hover.select__select:after, .customer .field:hover.field:after, .customer select:hover.select:after, .localization-form__select:hover.localization-form__select:after {
    box-shadow: 0 0 0 calc(0.1rem + var(--inputs-border-width)) rgba(var(--color-foreground), var(--inputs-border-opacity));
    outline: 0;
    border-radius: var(--inputs-radius);
  }
  .field__input:focus-visible, .select__select:focus-visible, .customer .field input:focus-visible, .customer select:focus-visible, .localization-form__select:focus-visible.localization-form__select:after {
    box-shadow: 0 0 0 calc(0.1rem + var(--inputs-border-width)) rgba(var(--color-foreground));
    outline: 0;
    border-radius: var(--inputs-radius);
  }
  .field__input:focus, .select__select:focus, .customer .field input:focus, .customer select:focus, .localization-form__select:focus.localization-form__select:after {
    box-shadow: 0 0 0 calc(0.1rem + var(--inputs-border-width)) rgba(var(--color-foreground));
    outline: 0;
    border-radius: var(--inputs-radius);
  }
  .localization-form__select:focus {
    outline: 0;
    box-shadow: none;
  }
  .text-area, .select {
    display: flex;
    position: relative;
    width: 100%;
  }
  .select .svg-wrapper, .customer select + .svg-wrapper {
    height: 0.6rem;
    width: 1rem;
    pointer-events: none;
    position: absolute;
    top: calc(50% - 0.2rem);
    right: 0;
  }
  .select__select, .customer select {
    cursor: pointer;
    line-height: calc(1 + 0.6 / var(--font-body-scale));
    padding: 0 calc(var(--inputs-border-width) + 3rem) 0 2rem;
    margin: var(--inputs-border-width);
    min-height: calc(var(--inputs-border-width) * 2);
  }
  .field {
    position: relative;
    width: 100%;
    display: flex;
    transition: box-shadow var(--duration-short) ease;
  }
  .customer .field {
    display: flex;
  }
  .field--with-error {
    flex-wrap: wrap;
  }
  .field__input, .customer .field input {
    flex-grow: 1;
    text-align: left;
    padding: 1.5rem;
    margin: var(--inputs-border-width);
    transition: box-shadow var(--duration-short) ease;
  }
  .field__label, .customer .field label {
    font-size: 1.6rem;
    left: calc(var(--inputs-border-width) + 2rem);
    top: calc(1rem + var(--inputs-border-width));
    margin-bottom: 0;
    pointer-events: none;
    position: absolute;
    transition: top var(--duration-short) ease, font-size var(--duration-short) ease;
    color: rgba(var(--color-foreground), 0.75);
    letter-spacing: 0.1rem;
    line-height: 1.5;
  }
  .field__input:focus ~ .field__label, .field__input:not(:placeholder-shown) ~ .field__label, .field__input:-webkit-autofill ~ .field__label, .customer .field input:focus ~ label, .customer .field input:not(:placeholder-shown) ~ label, .customer .field input:-webkit-autofill ~ label {
    font-size: 1rem;
    top: calc(var(--inputs-border-width) + 0.5rem);
    left: calc(var(--inputs-border-width) + 2rem);
    letter-spacing: 0.04rem;
  }
  .field__input:focus, .field__input:not(:placeholder-shown), .field__input:-webkit-autofill, .customer .field input:focus, .customer .field input:not(:placeholder-shown), .customer .field input:-webkit-autofill {
    padding: 2.2rem 1.5rem 0.8rem 2rem;
    margin: var(--inputs-border-width);
  }
  .field__input::-webkit-search-cancel-button, .customer .field input::-webkit-search-cancel-button {
    display: none;
  }
  .field__input::placeholder, .customer .field input::placeholder {
    opacity: 0;
  }
  .field__button {
    align-items: center;
    background-color: transparent;
    border: 0;
    color: currentColor;
    cursor: pointer;
    display: flex;
    height: 4.4rem;
    justify-content: center;
    overflow: hidden;
    padding: 0;
    position: absolute;
    right: 0;
    top: 0;
    width: 4.4rem;
  }
  .field__button > .svg-wrapper {
    height: 2.5rem;
    width: 2.5rem;
  }
  .field__input:-webkit-autofill ~ .field__button, .field__input:-webkit-autofill ~ .field__label, .customer .field input:-webkit-autofill ~ label {
    color: rgb(0, 0, 0);
  }
  .text-area {
    font-family: var(--font-body-family);
    font-style: var(--font-body-style);
    font-weight: var(--font-body-weight);
    min-height: 10rem;
    resize: none;
  }
  input[type='checkbox'] {
    display: inline-block;
    width: auto;
    margin-right: 0.5rem;
  }
  .form__label {
    display: block;
    margin-bottom: 0.6rem;
  }
  .form__message {
    align-items: center;
    display: flex;
    font-size: 1.4rem;
    line-height: 1;
    margin-top: 1rem;
  }
  .form__message--large {
    font-size: 1.6rem;
  }
  .customer .field .form__message {
    font-size: 1.4rem;
    text-align: left;
  }
  .form__message .icon, .customer .form__message .svg-wrapper {
    flex-shrink: 0;
    height: 1.3rem;
    margin-right: 0.5rem;
    width: 1.3rem;
  }
  .form__message--large .icon, .customer .form__message .svg-wrapper {
    height: 1.5rem;
    width: 1.5rem;
    margin-right: 1rem;
  }
  .customer .field .form__message .svg-wrapper {
    align-self: start;
  }
  .form-status {
    margin: 0;
    font-size: 1.6rem;
  }
  .form-status-list {
    padding: 0;
    margin: 2rem 0 4rem;
  }
  .form-status-list li {
    list-style-position: inside;
  }
  .form-status-list .link::first-letter {
    text-transform: capitalize;
  }
  .quantity {
    color: rgba(var(--color-foreground));
    position: relative;
    width: calc(14rem / var(--font-body-scale) + var(--inputs-border-width) * 2);
    display: flex;
    border-radius: var(--inputs-radius);
    min-height: calc((var(--inputs-border-width) * 2) + 4.5rem);
  }
  .quantity:after {
    pointer-events: none;
    content: '';
    position: absolute;
    top: var(--inputs-border-width);
    right: var(--inputs-border-width);
    bottom: var(--inputs-border-width);
    left: var(--inputs-border-width);
    border: 0.1rem solid transparent;
    border-radius: var(--inputs-radius);
    box-shadow: 0 0 0 var(--inputs-border-width) rgba(var(--color-foreground), var(--inputs-border-opacity));
    transition: box-shadow var(--duration-short) ease;
    z-index: 1;
  }
  .quantity:before {
    background: rgb(var(--color-background));
    pointer-events: none;
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border-radius: var(--inputs-radius-outset);
    box-shadow: var(--inputs-shadow-horizontal-offset) var(--inputs-shadow-vertical-offset) var(--inputs-shadow-blur-radius) rgba(var(--color-shadow), var(--inputs-shadow-opacity));
    z-index: -1;
  }
  .quantity__input {
    color: currentColor;
    font-family: var(--font-body-family);
    font-style: var(--font-body-style);
    font-weight: var(--font-body-weight);
    font-size: 1.6rem;
    font-weight: 500;
    opacity: 0.85;
    text-align: center;
    background-color: transparent;
    border: 0;
    padding: 0 0.5rem;
    width: 100%;
    flex-grow: 1;
    -webkit-appearance: none;
    appearance: none;
  }
  .quantity__button {
    width: calc(4.5rem / var(--font-body-scale));
    flex-shrink: 0;
    font-size: 1.8rem;
    border: 0;
    background-color: transparent;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    color: rgb(var(--color-foreground));
    padding: 0;
  }
  .quantity__button:first-child {
    margin-left: calc(var(--inputs-border-width));
  }
  .quantity__button:last-child {
    margin-right: calc(var(--inputs-border-width));
  }
  .quantity__button .svg-wrapper {
    width: 1rem;
    pointer-events: none;
  }
  .quantity__button:focus-visible, .quantity__input:focus-visible {
    background-color: rgb(var(--color-background));
    z-index: 2;
  }
  .quantity__button:focus, .quantity__input:focus {
    background-color: rgb(var(--color-background));
    z-index: 2;
  }
  .quantity__button:not(:focus-visible):not(.focused), .quantity__input:not(:focus-visible):not(.focused) {
    box-shadow: inherit;
    background-color: inherit;
  }
  .quantity__input:-webkit-autofill, .quantity__input:-webkit-autofill:hover, .quantity__input:-webkit-autofill:active {
    box-shadow: 0 0 0 10rem rgb(var(--color-background)) inset !important;
    -webkit-box-shadow: 0 0 0 10rem rgb(var(--color-background)) inset !important;
  }
  .quantity__input::-webkit-outer-spin-button, .quantity__input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  .quantity__input[type='number'] {
    -moz-appearance: textfield;
  }
  .quantity__rules {
    margin-top: 0.5rem;
    position: relative;
    font-size: 1.2rem;
  }
  .quantity__rules .caption {
    display: inline-block;
    margin-top: 0;
    margin-bottom: 0;
  }
  .quantity__rules .divider + .divider::before {
    content: '\2022';
    margin: 0 0.5rem;
  }
  .quantity__rules-cart {
    position: relative;
  }
  .product__info-container .loading__spinner:not(.hidden) ~ *, .quantity__rules-cart .loading__spinner:not(.hidden) ~ * {
    visibility: hidden;
  }
  .modal__toggle {
    list-style-type: none;
  }
  .modal__toggle-close {
    display: none;
  }
  .modal__toggle-open {
    display: flex;
  }
  .modal__close-button.link {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0rem;
    height: 4.4rem;
    width: 4.4rem;
    background-color: transparent;
  }
  .modal__close-button .icon {
    width: 1.7rem;
    height: 1.7rem;
  }
  .modal__content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgb(var(--color-background));
    z-index: 4;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .media-modal {
    cursor: zoom-out;
  }
  .media-modal .deferred-media {
    cursor: initial;
  }
  .cart-count-bubble:empty {
    display: none;
  }
  .cart-count-bubble {
    position: absolute;
    background-color: rgb(var(--color-button));
    color: rgb(var(--color-button-text));
    height: 1.7rem;
    width: 1.7rem;
    border-radius: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 0.9rem;
    bottom: 0.8rem;
    left: 2.2rem;
    line-height: calc(1 + 0.1 / var(--font-body-scale));
  }
  .utility-bar {
    height: 100%;
  }
  .utility-bar--bottom-border {
    border-bottom: 0.1rem solid rgba(var(--color-foreground), 0.08);
  }
  @media screen and (min-width: 990px) {
    .utility-bar--bottom-border-social-only {
      border-bottom: 0.1rem solid rgba(var(--color-foreground), 0.08);
    }
  }
  .utility-bar__grid {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-areas: 'announcements';
  }
  .utility-bar__grid .list-social {
    justify-content: flex-start;
    align-content: center;
    margin-left: -1.2rem;
    grid-area: social-icons;
  }
  @media screen and (max-width: 989px) {
    .utility-bar .utility-bar__grid .list-social {
      display: none;
    }
  }
  .utility-bar .list-social__item .icon {
    scale: 0.9;
  }
  @media screen and (min-width: 990px) {
    .utility-bar__grid--3-col {
      grid-template-columns: 3fr 4fr 3fr;
      grid-template-areas: 'social-icons announcements language-currency';
    }
    .utility-bar__grid--2-col {
      grid-template-columns: 1fr 1fr;
      grid-template-areas: 'social-icons language-currency';
    }
    .announcement-bar.announcement-bar--one-announcement, .announcement-bar--one-announcement .announcement-bar__link {
      width: fit-content;
      margin: auto;
    }
  }
  .announcement-bar, .announcement-bar__announcement {
    color: rgb(var(--color-foreground));
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    align-content: center;
    grid-area: announcements;
  }
  .announcement-bar .slider--everywhere {
    margin-bottom: 0;
    scroll-behavior: auto;
  }
  .utility-bar__grid .announcement-bar-slider {
    width: 100%;
  }
  .utility-bar__grid .announcement-bar-slider {
    width: 100%;
  }
  .announcement-bar-slider, .announcement-bar-slider .slider {
    width: 100%;
  }
  .announcement-bar .slider-button--next {
    margin-right: -1.5rem;
    min-width: 44px;
  }
  .announcement-bar .slider-button--prev {
    margin-left: -1.5rem;
    min-width: 44px;
  }
  .announcement-bar .slider-button--next:focus-visible, .announcement-bar .slider-button--prev:focus-visible, .utility-bar .list-social__link:focus-visible {
    outline-offset: -0.3rem;
    box-shadow: 0 0 0 -0.2rem rgb(var(--color-foreground));
  }
  .localization-wrapper {
    grid-area: language-currency;
    align-self: center;
    display: flex;
    justify-content: flex-end;
  }
  .localization-wrapper .localization-selector + .disclosure__list-wrapper {
    animation: animateMenuOpen var(--duration-default) ease;
  }
  .utility-bar .localization-wrapper .disclosure .localization-form__select, .utility-bar .localization-wrapper .disclosure__link {
    font-size: calc(var(--font-heading-scale) * 1.3rem);
  }
  @media screen and (min-width: 990px) {
    body:has(.section-header .header:not(.drawer-menu)) .utility-bar .page-width {
      padding-left: 5rem;
      padding-right: 5rem;
    }
    .announcement-bar-slider {
      width: 60%;
    }
    .announcement-bar .slider-button {
      height: 3.8rem;
    }
  }
  .announcement-bar__link {
    display: flex;
    width: 100%;
    text-decoration: none;
    height: 100%;
    justify-content: center;
    align-items: center;
  }
  .announcement-bar__link:hover {
    text-decoration: underline;
  }
  .announcement-bar__link .icon-arrow {
    display: inline-block;
    pointer-events: none;
    margin-left: 0.8rem;
    vertical-align: middle;
    margin-bottom: 0.2rem;
  }
  .announcement-bar__message {
    text-align: center;
    padding: 1rem 0;
    margin: 0;
    letter-spacing: 0.1rem;
    min-height: 3.8rem;
  }
  .announcement-bar-slider--fade-in-next .announcement-bar__message, .announcement-bar-slider--fade-in-previous .announcement-bar__message, .announcement-bar-slider--fade-out-next .announcement-bar__message, .announcement-bar-slider--fade-out-previous .announcement-bar__message {
    animation-duration: var(--duration-announcement-bar);
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
  }
  .announcement-bar-slider--fade-in-next .announcement-bar__message {
    --announcement-translate-from: -1.5rem;
    opacity: 0;
    animation-name: translateAnnouncementSlideIn;
    animation-delay: var(--duration-announcement-bar);
  }
  .announcement-bar-slider--fade-in-previous .announcement-bar__message {
    --announcement-translate-from: 1.5rem;
    opacity: 0;
    animation-name: translateAnnouncementSlideIn;
    animation-delay: var(--duration-announcement-bar);
  }
  .announcement-bar-slider--fade-out-next .announcement-bar__message {
    --announcement-translate-to: 1.5rem;
    animation-name: translateAnnouncementSlideOut;
  }
  .announcement-bar-slider--fade-out-previous .announcement-bar__message {
    --announcement-translate-to: -1.5rem;
    animation-name: translateAnnouncementSlideOut;
  }
  @keyframes translateAnnouncementSlideIn {
    0% {
      opacity: 0;
      transform: translateX(var(--announcement-translate-from));
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }
  @keyframes translateAnnouncementSlideOut {
    0% {
      opacity: 1;
      transform: translateX(0);
    }
    100% {
      opacity: 0;
      transform: translateX(var(--announcement-translate-to));
    }
  }
  .section-header.shopify-section-group-header-group {
    z-index: 3;
  }
  .shopify-section-header-sticky {
    position: sticky;
    top: 0;
  }
  .shopify-section-header-hidden {
    top: calc(-1 * var(--header-height));
  }
  .shopify-section-header-hidden.menu-open {
    top: 0;
  }
  .section-header.animate {
    transition: top 0.15s ease-out;
  }
  .shopify-section-group-header-group {
    z-index: 4;
  }
  .section-header ~ .shopify-section-group-header-group {
    z-index: initial;
  }
  .header-wrapper {
    display: block;
    position: relative;
    background-color: rgb(var(--color-background));
  }
  .header-wrapper--border-bottom {
    border-bottom: 0.1rem solid rgba(var(--color-foreground), 0.08);
  }
  .header {
    display: grid;
    grid-template-areas: 'left-icons heading icons';
    grid-template-columns: 1fr 2fr 1fr;
    align-items: center;
  }
  @media screen and (max-width: 749px) {
    .header--has-app {
      grid-template-columns: auto 1fr auto;
    }
  }
  @media screen and (min-width: 990px) {
    .header {
      grid-template-columns: 1fr auto 1fr;
    }
    .header--top-left, .header--middle-left:not(.header--has-menu) {
      grid-template-areas: 'heading icons' 'navigation navigation';
      grid-template-columns: 1fr auto;
    }
    .header--top-left.drawer-menu, .header--middle-left.drawer-menu {
      grid-template-areas: 'navigation heading icons';
      grid-template-columns: auto 1fr auto;
      column-gap: 1rem;
    }
    .header--middle-left {
      grid-template-areas: 'heading navigation icons';
      grid-template-columns: auto auto 1fr;
      column-gap: 2rem;
    }
    .header--middle-center:not(.drawer-menu) {
      grid-template-areas: 'navigation heading icons';
      grid-template-columns: 1fr auto 1fr;
      column-gap: 2rem;
    }
    .header--middle-center a.header__heading-link {
      text-align: center;
    }
    .header--top-center {
      grid-template-areas: 'left-icons heading icons' 'navigation navigation navigation';
    }
    .header--top-center.drawer-menu {
      grid-template-areas: 'left-icons heading icons';
      grid-template-columns: 1fr auto 1fr;
    }
    .header:not(.header--middle-left, .header--middle-center) .header__inline-menu {
      margin-top: 1.05rem;
    }
  }
  .header *[tabindex='-1']:focus {
    outline: none;
  }
  .header__heading {
    margin: 0;
    line-height: 0;
  }
  .header > .header__heading-link {
    line-height: 0;
  }
  .header__heading, .header__heading-link {
    grid-area: heading;
    justify-self: center;
  }
  .header__heading-link {
    display: inline-block;
    padding: 0.75rem;
    text-decoration: none;
    word-break: break-word;
  }
  .header__heading-link:hover .h2 {
    color: rgb(var(--color-foreground));
  }
  .header__heading-link .h2 {
    line-height: 1;
    color: rgba(var(--color-foreground), 0.75);
  }
  .header__heading-logo {
    height: auto;
    max-width: 100%;
  }
  .header__heading-logo-wrapper {
    width: 100%;
    display: inline-block;
    transition: width 0.3s cubic-bezier(0.52, 0, 0.61, 0.99);
  }
  @media screen and (max-width: 989px) {
    .header__heading, .header__heading-link {
      text-align: center;
    }
    .header--mobile-left .header__heading, .header--mobile-left .header__heading-link {
      text-align: left;
      justify-self: start;
    }
    .header--mobile-left {
      grid-template-columns: auto 2fr 1fr;
    }
  }
  @media screen and (min-width: 990px) {
    .header--middle-left .header__heading-link, .header--top-left .header__heading-link {
      margin-left: -0.75rem;
    }
    .header__heading, .header__heading-link {
      justify-self: start;
    }
    .header--middle-center .header__heading-link, .header--middle-center .header__heading {
      justify-self: center;
      text-align: center;
    }
    .header--top-center .header__heading-link, .header--top-center .header__heading {
      justify-self: center;
      text-align: center;
    }
  }
  .header__icons {
    display: flex;
    grid-area: icons;
    justify-self: end;
    padding-right: 0.8rem;
  }
  .header__icons .shopify-app-block {
    max-width: 4.4rem;
    max-height: 4.4rem;
    overflow: hidden;
  }
  .header__icon:not(.header__icon--summary), .header__icon span {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .header__icon {
    color: rgb(var(--color-foreground));
  }
  .header__icon span {
    height: 100%;
  }
  .header__icon .svg-wrapper {
    width: 44px;
    height: 44px;
  }
  .header__icon::after {
    content: none;
  }
  .header__icon:hover .icon, .modal__close-button:hover .icon {
    transform: scale(1.07);
  }
  .header__icon .icon {
    height: 2rem;
    width: 2rem;
    fill: none;
    vertical-align: middle;
  }
  .header__icon, .header__icon--cart .icon {
    height: 4.4rem;
    width: 4.4rem;
    padding: 0;
  }
  .header__icon--cart {
    position: relative;
    margin-right: -1.2rem;
  }
  .header__icon--menu[aria-expanded='true']::before {
    content: '';
    top: 100%;
    left: 0;
    height: calc(var(--viewport-height, 100vh) - (var(--header-bottom-position, 100%)));
    width: 100%;
    display: block;
    position: absolute;
    background: rgba(var(--color-foreground), 0.5);
  }
  .header__icon--account shop-user-avatar {
    --shop-avatar-size: 2.8rem;
  }
  details .header__icon-close {
    display: none;
  }
  details[open] .header__icon-close {
    display: inline-block;
  }
  account-icon {
    display: flex;
  }
  menu-drawer + .header__search {
    display: none;
  }
  .header > .header__search {
    grid-area: left-icons;
    justify-self: start;
  }
  .header--top-center.drawer-menu > .header__search {
    margin-left: 3.2rem;
  }
  .header--top-center header-drawer {
    grid-area: left-icons;
  }
  .header:not(.header--has-menu) * > .header__search {
    display: none;
  }
  .header__search {
    display: inline-flex;
    line-height: 0;
  }
  .header--top-center > .header__search {
    display: none;
  }
  .header--top-center * > .header__search {
    display: inline-flex;
  }
  @media screen and (min-width: 990px) {
    .header:not(.header--top-center) * > .header__search, .header--top-center > .header__search {
      display: inline-flex;
    }
    .header:not(.header--top-center) > .header__search, .header--top-center * > .header__search {
      display: none;
    }
  }
  details[open] > .search-modal {
    opacity: 1;
    animation: animateMenuOpen var(--duration-default) ease;
  }
  details[open] .modal-overlay {
    display: block;
  }
  details[open] .modal-overlay::after {
    position: absolute;
    content: '';
    background-color: rgb(var(--color-foreground), 0.5);
    top: 100%;
    left: 0;
    right: 0;
    height: 100vh;
  }
  .search-modal {
    opacity: 0;
    border-bottom: 0.1rem solid rgba(var(--color-foreground), 0.08);
    min-height: calc(100% + var(--inputs-margin-offset) + (2 * var(--inputs-border-width)));
    height: 100%;
  }
  .search-modal__content {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    padding: 0 5rem 0 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
    position: relative;
  }
  .search-modal__content-bottom {
    bottom: calc((var(--inputs-margin-offset) / 2));
  }
  .search-modal__content-top {
    top: calc((var(--inputs-margin-offset) / 2));
  }
  .search-modal__form {
    width: 100%;
  }
  .search-modal__close-button {
    position: absolute;
    right: 0.3rem;
  }
  @media screen and (min-width: 750px) {
    .search-modal__close-button {
      right: 1rem;
    }
    .search-modal__content {
      padding: 0 6rem;
    }
  }
  @media screen and (min-width: 990px) {
    .search-modal__form {
      max-width: 74.2rem;
    }
    .search-modal__close-button {
      position: initial;
      margin-left: 0.5rem;
    }
  }
  .header__icon--menu .icon {
    display: block;
    position: absolute;
    opacity: 1;
    transform: scale(1);
    transition: transform 150ms ease, opacity 150ms ease;
  }
  details:not([open]) > .header__icon--menu .icon-close, details[open] > .header__icon--menu .icon-hamburger {
    visibility: hidden;
    opacity: 0;
    transform: scale(0.8);
  }
  .js details[open]:not(.menu-opening) > .header__icon--menu .icon-close {
    visibility: hidden;
  }
  .js details[open]:not(.menu-opening) > .header__icon--menu .icon-hamburger {
    visibility: visible;
    opacity: 1;
    transform: scale(1.07);
  }
  .js details > .header__submenu {
    opacity: 0;
    transform: translateY(-1.5rem);
  }
  details[open] > .header__submenu {
    animation: animateMenuOpen var(--duration-default) ease;
    animation-fill-mode: forwards;
    z-index: 1;
  }
  @media (prefers-reduced-motion) {
    details[open] > .header__submenu {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .header__inline-menu {
    margin-left: -1.2rem;
    grid-area: navigation;
    display: none;
  }
  .header--top-center .header__inline-menu, .header--top-center .header__heading-link {
    margin-left: 0;
  }
  @media screen and (min-width: 990px) {
    .header__inline-menu {
      display: block;
    }
    .header--top-center .header__inline-menu {
      justify-self: center;
    }
    .header--top-center .header__inline-menu > .list-menu--inline {
      justify-content: center;
    }
    .header--middle-left .header__inline-menu {
      margin-left: 0;
    }
  }
  .header__menu {
    padding: 0 1rem;
  }
  .header__menu-item {
    padding: 1.2rem;
    text-decoration: none;
    color: rgba(var(--color-foreground), 0.75);
  }
  .header__menu-item:hover {
    color: rgb(var(--color-foreground));
  }
  .header__menu-item span {
    transition: text-decoration var(--duration-short) ease;
  }
  .header__menu-item:hover span {
    text-decoration: underline;
    text-underline-offset: 0.3rem;
  }
  details[open] > .header__menu-item {
    text-decoration: underline;
  }
  details[open]:hover > .header__menu-item {
    text-decoration-thickness: 0.2rem;
  }
  details[open] > .header__menu-item .icon-caret {
    transform: rotate(180deg);
  }
  .header__active-menu-item {
    transition: text-decoration-thickness var(--duration-short) ease;
    color: rgb(var(--color-foreground));
    text-decoration: underline;
    text-underline-offset: 0.3rem;
  }
  .header__menu-item:hover .header__active-menu-item {
    text-decoration-thickness: 0.2rem;
  }
  .header__submenu {
    transition: opacity var(--duration-default) ease, transform var(--duration-default) ease;
  }
  .global-settings-popup, .header__submenu.global-settings-popup {
    border-radius: var(--popup-corner-radius);
    border-color: rgba(var(--color-foreground), var(--popup-border-opacity));
    border-style: solid;
    border-width: var(--popup-border-width);
    box-shadow: var(--popup-shadow-horizontal-offset) var(--popup-shadow-vertical-offset) var(--popup-shadow-blur-radius) rgba(var(--color-shadow), var(--popup-shadow-opacity));
    z-index: -1;
  }
  .header__submenu.list-menu {
    padding: 1rem 0;
  }
  .header__submenu .header__submenu {
    background-color: rgba(var(--color-foreground), 0.03);
    padding: 1rem 0;
    margin: 1rem 0;
  }
  .header__submenu .header__menu-item:after {
    right: 2rem;
  }
  .header__submenu .header__menu-item {
    justify-content: space-between;
    padding: 0.8rem 2rem;
  }
  .header__submenu .header__menu-item:hover {
    text-decoration-line: underline;
  }
  .header__menu-item .icon-caret {
    right: 0.8rem;
  }
  .header__submenu .icon-caret {
    flex-shrink: 0;
    margin-left: 1rem;
    position: static;
  }
  header-menu > details, details-disclosure > details {
    position: relative;
  }
  @keyframes animateMenuOpen {
    0% {
      opacity: 0;
      transform: translateY(-1.5rem);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .overflow-hidden-mobile, .overflow-hidden-tablet, .overflow-hidden-desktop {
    overflow: hidden;
  }
  @media screen and (min-width: 750px) {
    .overflow-hidden-mobile {
      overflow: auto;
    }
  }
  @media screen and (min-width: 990px) {
    .overflow-hidden-tablet {
      overflow: auto;
    }
  }
  .badge {
    border: 1px solid transparent;
    border-radius: var(--badge-corner-radius);
    display: inline-block;
    font-size: 1.2rem;
    letter-spacing: 0.1rem;
    line-height: 1;
    padding: 0.5rem 1.3rem 0.6rem 1.3rem;
    text-align: center;
    background-color: rgb(var(--color-badge-background));
    border-color: rgba(var(--color-badge-border), var(--alpha-badge-border));
    color: rgb(var(--color-badge-foreground));
    word-break: break-word;
  }
  .gradient {
    background: rgb(var(--color-background));
    background: var(--gradient-background);
    background-attachment: fixed;
  }
  @media screen and (forced-colors: active) {
    .icon {
      color: CanvasText;
      fill: CanvasText !important;
    }
    .icon-close-small path {
      stroke: CanvasText;
    }
  }
  .ratio {
    display: flex;
    position: relative;
    align-items: stretch;
  }
  .ratio::before {
    content: '';
    width: 0;
    height: 0;
    padding-bottom: var(--ratio-percent);
  }
  .content-container {
    border-radius: var(--text-boxes-radius);
    border: var(--text-boxes-border-width) solid rgba(var(--color-foreground), var(--text-boxes-border-opacity));
    position: relative;
  }
  .content-container:after {
    content: '';
    position: absolute;
    top: calc(var(--text-boxes-border-width) * -1);
    right: calc(var(--text-boxes-border-width) * -1);
    bottom: calc(var(--text-boxes-border-width) * -1);
    left: calc(var(--text-boxes-border-width) * -1);
    border-radius: var(--text-boxes-radius);
    box-shadow: var(--text-boxes-shadow-horizontal-offset) var(--text-boxes-shadow-vertical-offset) var(--text-boxes-shadow-blur-radius) rgba(var(--color-shadow), var(--text-boxes-shadow-opacity));
    z-index: -1;
  }
  .content-container--full-width:after {
    left: 0;
    right: 0;
    border-radius: 0;
  }
  @media screen and (max-width: 749px) {
    .content-container--full-width-mobile {
      border-left: none;
      border-right: none;
      border-radius: 0;
    }
    .content-container--full-width-mobile:after {
      display: none;
    }
  }
  .global-media-settings {
    position: relative;
    border: var(--media-border-width) solid rgba(var(--color-foreground), var(--media-border-opacity));
    border-radius: var(--media-radius);
    overflow: visible !important;
    background-color: rgb(var(--color-background));
  }
  .global-media-settings:after {
    content: '';
    position: absolute;
    top: calc(var(--media-border-width) * -1);
    right: calc(var(--media-border-width) * -1);
    bottom: calc(var(--media-border-width) * -1);
    left: calc(var(--media-border-width) * -1);
    border-radius: var(--media-radius);
    box-shadow: var(--media-shadow-horizontal-offset) var(--media-shadow-vertical-offset) var(--media-shadow-blur-radius) rgba(var(--color-shadow), var(--media-shadow-opacity));
    z-index: -1;
    pointer-events: none;
  }
  .global-media-settings--no-shadow {
    overflow: hidden !important;
  }
  .global-media-settings--no-shadow:after {
    content: none;
  }
  .global-media-settings img, .global-media-settings iframe, .global-media-settings model-viewer, .global-media-settings video, .global-media-settings .placeholder-svg {
    border-radius: calc(var(--media-radius) - var(--media-border-width));
  }
  .content-container--full-width, .global-media-settings--full-width, .global-media-settings--full-width img, .global-media-settings--full-width video, .global-media-settings--full-width iframe, .global-media-settings--full-width .placeholder-svg {
    border-radius: 0;
    border-left: none;
    border-right: none;
  }
  @supports not (inset: 10px) {
    .grid {
      margin-left: calc(-1 * var(--grid-mobile-horizontal-spacing));
    }
    .grid__item {
      padding-left: var(--grid-mobile-horizontal-spacing);
      padding-bottom: var(--grid-mobile-vertical-spacing);
    }
    @media screen and (min-width: 750px) {
      .grid {
        margin-left: calc(-1 * var(--grid-desktop-horizontal-spacing));
      }
      .grid__item {
        padding-left: var(--grid-desktop-horizontal-spacing);
        padding-bottom: var(--grid-desktop-vertical-spacing);
      }
    }
    .grid--gapless .grid__item {
      padding-left: 0;
      padding-bottom: 0;
    }
    @media screen and (min-width: 749px) {
      .grid--peek .grid__item {
        padding-left: var(--grid-mobile-horizontal-spacing);
      }
    }
    .product-grid .grid__item {
      padding-bottom: var(--grid-mobile-vertical-spacing);
    }
    @media screen and (min-width: 750px) {
      .product-grid .grid__item {
        padding-bottom: var(--grid-desktop-vertical-spacing);
      }
    }
  }
  .font-body-bold {
    font-weight: var(--font-body-weight-bold);
  }
  @media (forced-colors: active) {
    .button, .shopify-challenge__button, .customer button {
      border: transparent solid 1px;
    }
    .button:focus-visible, .button:focus, .button.focused, .shopify-payment-button__button--unbranded:focus-visible, .shopify-payment-button [role='button']:focus-visible, .shopify-payment-button__button--unbranded:focus, .shopify-payment-button [role='button']:focus {
      outline: solid transparent 1px;
    }
    .field__input:focus, .select__select:focus, .customer .field input:focus, .customer select:focus, .localization-form__select:focus.localization-form__select:after {
      outline: transparent solid 1px;
    }
    .localization-form__select:focus {
      outline: transparent solid 1px;
    }
  }
  .rte:after {
    clear: both;
    content: '';
    display: block;
  }
  .rte > *:first-child {
    margin-top: 0;
  }
  .rte > *:last-child {
    margin-bottom: 0;
  }
  .rte table {
    table-layout: fixed;
  }
  @media screen and (min-width: 750px) {
    .rte table td {
      padding-left: 1.2rem;
      padding-right: 1.2rem;
    }
  }
  .rte img {
    height: auto;
    max-width: 100%;
    border: var(--media-border-width) solid rgba(var(--color-foreground), var(--media-border-opacity));
    border-radius: var(--media-radius);
    box-shadow: var(--media-shadow-horizontal-offset) var(--media-shadow-vertical-offset) var(--media-shadow-blur-radius) rgba(var(--color-shadow), var(--media-shadow-opacity));
    margin-bottom: var(--media-shadow-vertical-offset);
  }
  .rte ul, .rte ol {
    list-style-position: inside;
    padding-left: 2rem;
  }
  .rte li {
    list-style: inherit;
  }
  .rte li:last-child {
    margin-bottom: 0;
  }
  .rte a {
    color: rgba(var(--color-link), var(--alpha-link));
    text-underline-offset: 0.3rem;
    text-decoration-thickness: 0.1rem;
    transition: text-decoration-thickness var(--duration-short) ease;
  }
  .rte a:hover {
    color: rgb(var(--color-link));
    text-decoration-thickness: 0.2rem;
  }
  .rte blockquote {
    display: inline-flex;
  }
  .rte blockquote > * {
    margin: -0.5rem 0 -0.5rem 0;
  }
  .shape--mask {
    display: block;
    height: 0;
    width: 0;
  }
  .shape--arch {
    clip-path: url('#Shape-Arch');
  }
  .shape--blob {
    clip-path: polygon(var(--shape--blob-1));
  }
  .shape--chevronleft {
    clip-path: polygon(100% 0%, 85% 50%, 100% 100%, 15% 100%, 0% 50%, 15% 0%);
  }
  .shape--chevronright {
    clip-path: polygon(85% 0%, 100% 50%, 85% 100%, 0% 100%, 15% 50%, 0% 0%);
  }
  .shape--circle {
    clip-path: circle(closest-side);
  }
  .shape--diamond {
    clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  }
  .shape--parallelogram {
    clip-path: polygon(15% 0, 100% 0%, 85% 100%, 0% 100%);
  }
  .shape--round {
    clip-path: ellipse(45% 45% at 50% 50%);
  }
  .animate--fixed {
    clip-path: inset(0);
  }
  .animate--fixed > img:not(.zoom):not(.deferred-media__poster-button), .animate--fixed > svg:not(.zoom):not(.deferred-media__poster-button) {
    position: fixed;
    height: 100vh;
  }
  .animate--zoom-in {
    --zoom-in-ratio: 1;
  }
  .animate--zoom-in > img, .animate--zoom-in > .svg-wrapper {
    transition: scale var(--duration-short) linear;
    scale: var(--zoom-in-ratio);
  }
  @media (prefers-reduced-motion: no-preference) {
    .animate--ambient > img, .animate--ambient > .svg-wrapper {
      animation: animateAmbient 30s linear infinite;
    }
    @keyframes animateAmbient {
      0% {
        transform: rotate(0deg) translateX(1em) rotate(0deg) scale(1.2);
      }
      100% {
        transform: rotate(360deg) translateX(1em) rotate(-360deg) scale(1.2);
      }
    }
    .scroll-trigger.animate--fade-in, .scroll-trigger.animate--slide-in {
      opacity: 0.01;
    }
    .scroll-trigger.animate--slide-in {
      transform: translateY(2rem);
    }
    .scroll-trigger:not(.scroll-trigger--offscreen).animate--fade-in {
      opacity: 1;
      animation: var(--animation-fade-in);
    }
    .scroll-trigger:not(.scroll-trigger--offscreen).animate--slide-in {
      animation: var(--animation-slide-in);
      animation-delay: calc(var(--animation-order) * 75ms);
    }
    .scroll-trigger.scroll-trigger--design-mode.animate--fade-in, .scroll-trigger.scroll-trigger--design-mode.animate--slide-in, .scroll-trigger.scroll-trigger--design-mode .slider, .scroll-trigger:not(.scroll-trigger--offscreen).scroll-trigger--cancel {
      opacity: 1;
      animation: none;
      transition: none;
      transform: none;
    }
    .scroll-trigger.scroll-trigger--design-mode.animate--slide-in {
      transform: translateY(0);
    }
    @keyframes slideIn {
      from {
        transform: translateY(2rem);
        opacity: 0.01;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }
    @keyframes fadeIn {
      from {
        opacity: 0.01;
      }
      to {
        opacity: 1;
      }
    }
  }
  @media (prefers-reduced-motion: no-preference) and (hover: hover) {
    .animate--hover-3d-lift .card-wrapper .card--card, .animate--hover-3d-lift .card-wrapper .card--standard .card__inner, .animate--hover-3d-lift .button:not(.button--tertiary), .animate--hover-3d-lift .shopify-challenge__button, .animate--hover-3d-lift .customer button, .animate--hover-3d-lift .shopify-payment-button__button, .animate--hover-3d-lift .deferred-media .deferred-media__poster-button {
      transition: transform var(--duration-long) ease, box-shadow var(--duration-long) ease;
      transform-origin: center;
    }
    .animate--hover-3d-lift .card-wrapper:hover .card--card, .animate--hover-3d-lift .card-wrapper:hover .card--standard .card__inner, .animate--hover-3d-lift .button:not(.button--tertiary):not([disabled]):hover, .animate--hover-3d-lift .shopify-challenge__button:not([disabled]):hover, .animate--hover-3d-lift .customer button:not([disabled]):hover, .animate--hover-3d-lift .shopify-payment-button__button:hover, .animate--hover-3d-lift .deferred-media:hover .deferred-media__poster-button {
      transition: transform var(--duration-extended) ease, box-shadow var(--duration-long) ease;
      transform: rotate(1deg);
      box-shadow: -1rem -1rem 1rem -1rem rgba(0, 0, 0, 0.05), 1rem 1rem 1rem -1rem rgba(0, 0, 0, 0.05), 0 0 0.5rem 0 rgba(255, 255, 255, 0), 0 2rem 3.5rem -2rem rgba(0, 0, 0, 0.5);
    }
    .animate--hover-3d-lift .deferred-media:hover .deferred-media__poster-button {
      transform: translate(-50%, -50%) scale(1.05);
    }
    .animate--hover-3d-lift .collage__item .card-wrapper:hover .card--card, .animate--hover-3d-lift .collage__item .card-wrapper:hover .card--standard .card__inner {
      transform: rotate(0.5deg);
    }
    .animate--hover-3d-lift .product-grid .grid__item:hover, .animate--hover-3d-lift .collection-list .grid__item:hover, .animate--hover-3d-lift .collage__item:hover, .animate--hover-3d-lift .blog-articles .article:hover, .animate--hover-3d-lift .complementary-slide li:hover {
      z-index: 2;
    }
    .animate--hover-3d-lift .product-grid {
      isolation: isolate;
    }
    .animate--hover-3d-lift .card-wrapper .card--shape.card--standard:not(.card--text) .card__inner {
      box-shadow: none;
      transition: transform var(--duration-long) ease, filter var(--duration-long) ease;
    }
    .animate--hover-3d-lift .card-wrapper:hover .card--shape.card--standard:not(.card--text) .card__inner {
      transition: transform calc(2 * var(--duration-extended)) ease, filter var(--duration-long) ease;
      filter: drop-shadow(0rem 2rem 2rem rgba(0, 0, 0, 0.15)) drop-shadow(0rem 1rem 1rem rgba(0, 0, 0, 0.15));
    }
    .animate--hover-3d-lift .card-wrapper:hover .card--card:after, .animate--hover-3d-lift .card-wrapper:hover .card--standard .card__inner:after, .animate--hover-3d-lift .card-wrapper:hover .card--shape.card--standard:not(.card--text) .card__inner .card__media:before {
      background-image: var(--easter-egg);
      background-size: 250px 250px;
      mix-blend-mode: color-dodge;
      pointer-events: none;
      z-index: 2;
    }
    .animate--hover-3d-lift .card-wrapper:hover .card--shape.card--standard:not(.card--text) .card__inner .card__media:before {
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
    }
    .animate--hover-3d-lift .card-wrapper .card--card:before, .animate--hover-3d-lift .card-wrapper .card--standard .card__media:after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      opacity: 0;
      pointer-events: none;
      transition: background-position calc(2 * var(--duration-extended)) ease, opacity var(--duration-default) ease;
      mix-blend-mode: overlay;
      background-size: 400% 100%;
      background-position: 90% 0;
      background-repeat: no-repeat;
      background-image: linear-gradient( 135deg, rgba(255, 255, 255, 0) 45%, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, 0) 55% );
    }
    .animate--hover-3d-lift .card-wrapper:hover .card--card:before, .animate--hover-3d-lift .card-wrapper:hover .card--standard .card__media:after {
      opacity: 0.2;
      transition: background-position 6s ease, opacity var(--duration-long) ease;
      background-position: left;
      z-index: 2;
    }
    :root {
      --easter-egg: none;
      --sparkle: url('./sparkle.gif');
    }
    .animate--hover-vertical-lift .button:not(.button--tertiary), .animate--hover-vertical-lift .shopify-challenge__button, .animate--hover-vertical-lift .customer button, .animate--hover-vertical-lift .shopify-payment-button__button {
      transition: transform var(--duration-default) var(--ease-out-slow);
    }
    .animate--hover-vertical-lift .card-wrapper .card--card, .animate--hover-vertical-lift .card-wrapper .card--standard .card__inner {
      transition: transform var(--duration-medium) var(--ease-out-slow);
    }
    .animate--hover-vertical-lift .card-wrapper:hover .card--card, .animate--hover-vertical-lift .card-wrapper:hover .card--standard .card__inner {
      transform: translateY(-0.75rem);
    }
    .animate--hover-vertical-lift .card-wrapper:active .card--card, .animate--hover-vertical-lift .card-wrapper:active .card--standard .card__inner {
      transform: translateY(-0.5rem);
    }
    .animate--hover-vertical-lift .button:not(.button--tertiary):not([disabled]):hover, .animate--hover-vertical-lift .shopify-challenge__button:not([disabled]):hover, .animate--hover-vertical-lift .customer button:not([disabled]):hover, .animate--hover-vertical-lift .shopify-payment-button__button:hover {
      transform: translateY(-0.25rem);
    }
    .animate--hover-vertical-lift .button:not(.button--tertiary):not([disabled]):active, .animate--hover-vertical-lift .shopify-challenge__button:not([disabled]):active, .animate--hover-vertical-lift .customer button:not([disabled]):active, .animate--hover-vertical-lift .shopify-payment-button__button:active {
      transform: translateY(0);
    }
    .animate--hover-vertical-lift .button:not([disabled]):hover:after, .animate--hover-vertical-lift .customer button:not([disabled]):hover:after, .animate--hover-vertical-lift .shopify-payment-button__button:not([disabled]):hover:after {
      --border-offset: 0.3px;
      box-shadow: 0 0 0 calc(var(--buttons-border-width) + var(--border-offset)) rgba(var(--color-button-text), var(--border-opacity)), 0 0 0 var(--buttons-border-width) rgba(var(--color-button), var(--alpha-button-background));
    }
    .animate--hover-vertical-lift .button:not([disabled]).button--secondary:hover:after {
      --border-offset: 0px;
    }
  }
  .loading__spinner {
    position: absolute;
    z-index: 1;
    width: 1.8rem;
  }
  .loading__spinner {
    width: 1.8rem;
    display: inline-block;
  }
  .spinner {
    animation: rotator 1.4s linear infinite;
  }
  @keyframes rotator {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(270deg);
    }
  }
  .path {
    stroke-dasharray: 280;
    stroke-dashoffset: 0;
    transform-origin: center;
    stroke: rgb(var(--color-foreground));
    animation: dash 1.4s ease-in-out infinite;
  }
  @media screen and (forced-colors: active) {
    .path {
      stroke: CanvasText;
    }
  }
  @keyframes dash {
    0% {
      stroke-dashoffset: 280;
    }
    50% {
      stroke-dashoffset: 75;
      transform: rotate(135deg);
    }
    100% {
      stroke-dashoffset: 280;
      transform: rotate(450deg);
    }
  }
  .loading__spinner:not(.hidden) + .cart-item__price-wrapper, .loading__spinner:not(.hidden) ~ cart-remove-button {
    opacity: 50%;
  }
  .loading__spinner:not(.hidden) ~ cart-remove-button {
    pointer-events: none;
    cursor: default;
  }
  .progress-bar-container {
    width: 100%;
    margin: auto;
  }
  .progress-bar {
    height: 0.13rem;
    width: 100%;
  }
  .progress-bar-value {
    width: 100%;
    height: 100%;
    background-color: rgb(var(--color-foreground));
    animation: indeterminateAnimation var(--duration-extra-longer) infinite ease-in-out;
    transform-origin: 0;
  }
  .progress-bar .progress-bar-value {
    display: block;
  }
  @keyframes indeterminateAnimation {
    0% {
      transform: translateX(-20%) scaleX(0);
    }
    40% {
      transform: translateX(30%) scaleX(0.7);
    }
    100% {
      transform: translateX(100%) scaleX(0);
    }
  }
}
@layer base {
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
  .chat {
    --mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
  }
  .tooltip {
    --mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
  }
}
@layer base {
  :root,
[data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@layer base {
  *,
::after,
::backdrop,
::before,
::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  :host,
html {
    line-height: 1.5;
    font-family: var(
    --default-font-family,
    ui-sans-serif,
    system-ui,
    sans-serif,
    "Apple Color Emoji",
    "Segoe UI Emoji",
    "Segoe UI Symbol",
    "Noto Color Emoji"
  );
    webkit-tap-highlight-color: #0000;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  h1,
h2,
h3,
h4,
h5,
h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  ::file-selector-button,
button,
input,
optgroup,
select,
textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    background: 0 0;
  }
  input:where(:not([type="button"], [type="reset"], [type="submit"])),
select,
textarea {
    border-width: 1px;
  }
  ::file-selector-button,
button,
input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }
  :-moz-focusring {
    outline: auto;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  ::-webkit-search-decoration {
    webkit-appearance: none;
  }
  menu,
ol,
ul {
    list-style: none;
  }
  textarea {
    resize: vertical;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklch, currentColor 50%, #0000);
  }
  audio,
canvas,
embed,
iframe,
img,
object,
svg,
video {
    display: block;
    vertical-align: middle;
  }
  img,
video {
    max-width: 100%;
    height: auto;
  }
}
@layer base {
  :where(
  :root:has(
      .modal-open,
      .modal[open],
      .modal:target,
      .modal-toggle:checked,
      .drawer:not(.drawer-open) > .drawer-toggle:checked
    )
) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
    --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked ) {
    overflow: hidden;
  }
}
@layer base {
  :root {
    scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
  }
}
@keyframes dropdown {
  0% {
    opacity: 0;
  }
}
@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }
  100% {
    scale: 1;
    opacity: 1;
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=shopify-light]:checked),[data-theme="shopify-light"] {
    color-scheme: light;
    --color-base-100: var(--shopify-light-base-100);
    --color-base-content: var(--shopify-light-base-content);
    --color-primary: var(--shopify-light-primary);
    --color-primary-content: var(--shopify-light-primary-content);
  }
}
@layer base {
  :root:has(input.theme-controller[value=shopify-dark]:checked),[data-theme="shopify-dark"] {
    color-scheme: dark;
    --color-base-100: var(--shopify-dark-base-100);
    --color-base-content: var(--shopify-dark-base-content);
    --color-primary: var(--shopify-dark-primary);
    --color-primary-content: var(--shopify-dark-primary-content);
  }
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
